{"version":3,"sources":["services/message.ts","components/GeneralTable/model/state.ts","components/GeneralTable/model/computed.ts","components/GeneralTable/model/reducer.ts","components/GeneralTable/model/lifecycle.ts","components/GeneralTable/model/meta.ts","components/GeneralTable/model/index.ts","components/GeneralTable/index.tsx","components/dumb/general.module.css","utils/timer.ts","configs/c2Mods.ts","services/staff.ts","utils/arr.ts","components/dumb/general.tsx","services/concent.ts","utils/common.ts","services/color.ts","models/global/state.ts","models/global/reducer.ts","configs/constant/routerPath.ts","configs/constant/sys.ts","configs/constant/index.ts","models/global/computed.ts","models/global/lifecycle.ts","models/global/index.ts","models/counter/computed.ts","models/counter/reducer.ts","models/counter/lifecycle.ts","models/counter/index.ts","models/counter/state.ts","models/todolist/state.ts","models/todolist/computed.ts","utils/url.ts","services/http.ts","services/domain/todo.ts","models/todolist/reducer.ts","models/todolist/lifecycle.ts","models/todolist/index.ts","models/_demo/reducer.ts","models/_demo/computed.ts","models/_demo/lifecycle.ts","models/_demo/index.ts","models/_demo/state.ts","configs/runConcent.ts","components/dumb/SiderSwitchIcon/index.tsx","services/appPath.ts","pages/Home/index.tsx","configs/menus.ts","configs/derived/menus.ts","pages/NotFound/index.tsx","layout/Routes.tsx","layout/dumb/Logo.tsx","layout/Sider.tsx","layout/Footer.tsx","layout/Header.tsx","layout/index.tsx","serviceWorker.ts","index.tsx","utils/obj.ts","layout/App.module.css"],"names":["key2tipTimer","validMethods","_callMessageMethod","method","cb","content","displayDuration","noDupDuration","includes","console","error","message","key","setTimeout","Promise","resolve","warn","getInitMetaData","hasMoreMode","pageSize","lockId","hasMore","current","total","list","loading","getInitialState","meta","doubleCount","newState","getTableMeta","tableId","obj","modTableMeta","moduleState","toMod","tableMeta","parseInt","handlePageCurrentChange","_","ctx","a","fetchFn","dispatch","Date","now","fetchTableData","handleNextPage","handlePageSizeChange","clearTable","m","oldList","res","pageList","page_list","start","forEach","v","idx","__seq","targetList","concat","mounted","willUnmount","modelDesc","state","computed","reducer","lifecycle","model","useModelWithSetup","makeUseModelWithSetup","makeUseModelWithSetupCuf","makeUseModel","configure","setup","props","tid","fetchAfterMounted","propsFetchFn","pageSizeOptions","ccUniqueKey","on","_fetchFn","mr","effect","handelPageSizeChange","page","GeneralTable","settings","columns","rowKey","scroll","x","disableBtnWhenNoMore","size","dataSource","pagination","style","height","width","disabled","onClick","onShowSizeChange","onChange","showSizeChanger","React","memo","module","exports","delay","ms","r","COUNTER","getStaffList","window","initData","searchUsers","toMatchStr","length","slice","pattern","RegExp","filter","item","rtxname","test","debounce","removeDupStrItem","oriList","toRemoveList","newList","push","merge","tmpList","listArgs","set","Set","Array","from","ButtonBase","children","AsyncButton","className","styles","asyncButton","Blank","type","mergedStyle","display","NormalBlank","VerticalBlank","EmptyView","priBuildCallParams","moduleName","connect","options","targetOptions","tag","extra","staticExtra","cuDesc","passCuDesc","ccClassKey","regOpt","callTarget","callerParams","ac","isArray","fn","payload","fnName","renderKey","alert","useC2Mod","useConcent","useC2DefaultMod","cst","MODULE_DEFAULT","useSetup","mergedOptions","useSetupCtx","getGlobalState","getGst","ctxOn","isLocalMode","location","port","privSetColor","val","document","documentElement","setProperty","hex2rgbString","hexColor","rgb","Color","object","hex2rgb","g","b","getThemeColorLight","lighten","c","themeColorLight","hex","fixHeader","siderVisible","siderTheme","headerTheme","themeColor","themeColorRGB","colorServ","someInfo","isAppReady","userName","userIcon","isAdmin","isInnerMock","commonUtil","excludedMockApis","toggleSiderVisible","p","changeThemeColor","switchSiderTheme","checked","switchHeaderTheme","switchFixHeader","changeIsInnerMock","prepareApp","user","icon","info","DEMO","DEMO_USE_SETUP","SIMPLE_LIST","siderWidth","siderWidthPx","buttomBgColor","contentBgColor","webHeaderImg","img404","img403","routerPath","routerPathCst","sys","sysCst","contentLayoutStyle","n","paddingTop","marginLeft","minHeight","headerStyle","hstyle","color","backgroundColor","position","left","right","siderIconDes","siderThemeSwitchChecked","headerThemeSwitchChecked","loaded","rd","staffServ","value","incrementBigValue","bigValue","incrementOne","decrementOne","increment","toInc","incBy","incrementAsync","foo","log","clear","keyword","formattedInput","purify","url","split","cute","setConfig","retryCount","timeout","generalOptions","headers","withCredentials","mockData","seperateOptions","returnLogicData","defaultValue","check","alertErrorMsg","failStrategy","const","KEEP_ALL_BEEN_EXECUTED","bizServiceName","cuteOptions","logicOptions","checkCode","axiosReply","checkOptions","statusCode","httpResponse","data","Error","status","response","code","msg","errMsg","toReturn","err","attachPrefixAndData","pureUrl","replace","prefixedUrl","startsWith","objUtil","dataQueryStr","qs","stringify","handleError","messageService","sendRequest","mergedOpt","c2Serv","getRealReply","reply","mockImpl","timerUtil","fakeHttp","hasMockedFn","urlUtil","mockResult","body","sendXForm","xFormOptions","_data","JSON","urls","_urls","map","multiGet","replyList","items","multiPost","finalUrl","formData","FormData","Object","keys","prototype","hasOwnProperty","call","File","append","appendVal","instance","axios","create","post","downloadFile","form","createElement","action","appendChild","input","name","submit","remove","get","put","xFormPost","xFormPut","postFormData","getTodoList","http","ret","forCopy","setState","fetchList","todoServ","addBig","aNormalMethod","actionCtx","changeDesc","desc","currentTarget","nodeName","todos","revesedDesc","reverse","join","num","plugins","reduxDevToolPlugin","run","models","errorHandler","msgService","alwaysRenderCaller","isStrict","stDrawerIcon","top","zIndex","SiderSwitchIcon","des","uiIcon","RightCircleOutlined","LeftCircleOutlined","cachedAppName","localStorage","getItem","getBasename","getRelativeRootPath","pathname","basename","targetPathname","startIdx","substr","mods","history","danger","DownloadOutlined","showUnderLocalMode","menus","Icon","FormOutlined","label","path","Component","HomePage","isHomePage","OrderedListOutlined","lazy","showInSider","PlusCircleOutlined","path2menuItem","path2menuGroup","showingMenus","allMenus","homePageFullPath","groupItem","rest","showingMenuGroup","allMenuGroup","childItem","setContentLayout","showBreadcrumb","fillDefaultValChildItem","menuItem","fillDefaultValMenuItem","calcMenus","flattedMenus","flatted","pushToFlatted","flatMenus","Content","Layout","Fallback","Routes","errOccurred","curMenus","cachedUi","uiRoutes","uiHomeRoute","uiNotFound","changeNavData","curAppPath","unshift","menuGroup","renderCrashTip","globalComputed","padding","renderNavBreadcrumb","paddingLeft","lineHeight","i","Item","makeCompWrap","uiBreadcrumb","uiReplaceRouteComp","executed","useRef","beforeComponentMount","uiTargetComp","contentWrap","buildRouteUi","homeMenuItem","CompWrap","exact","component","CompNotFoundWrap","NotFound","uiNotFoundRoute","this","getUrlChangedEvName","param","fallback","register","fixedStyle","normalStyle","Logo","fixed","src","alt","Sider","SubMenu","Menu","MenuItem","iState","openKeys","selectedKeys","ins","initState","params","callByApi","globalState","arrUtil","insState","changeSelectedKeys","openMenus","renderMenuItem","to","SiderMenus","mode","borderRight","se","theme","onSelect","onOpenChange","uiGroupItemIon","title","siderWrap","Footer","textAlign","href","target","stSiderMenus","boxShadow","maxWidth","grd","globalReducer","onWebsiteColorChange","colorResult","onSiderThemeChange","onHeaderThemeChange","onFixHeaderChange","onInnerMockChange","SettingPanel","gst","gcu","onChangeComplete","checkedChildren","unCheckedChildren","Header","header","userIconWrap","placement","trigger","SettingOutlined","headerSetting","renderContentArea","avatar","paragraph","rows","App","callUrlChangedOnInit","Boolean","hostname","match","ReactDOM","render","id","node","getElementById","getHostNode","navigator","serviceWorker","ready","then","registration","unregister","catch","okeys","isValidVal","undefined","isObject","allowArr","safeGet","safeAssign","safeParse","jsonStr","parse","isNull","nullDef","nullValues","checkObjValues","emptyObjIsNull","emptyArrIsNull","inNullValues","keyLen","allIsNull","subValue","isDepthLargeThan","toCompare","depthRecorder","tryDetectObjDepth","curDepth","newDepth","getObjDepth"],"mappings":"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","file":"static/js/main.3715a4b9.chunk.js","sourcesContent":["/**\n * -----------------------------------------------------------------------------------------\n * 对接antd message模块，防止频繁调用时出现相同内容的提示\n * -----------------------------------------------------------------------------------------\n */\nimport { message } from 'antd';\n\n/**\n * key: ${method}_${content}\n * 缓存对应方法的提示回调\n */\nconst key2tipTimer = {} as Record<string, any>;\nconst validMethods = ['info', 'error', 'success', 'warn', 'warning'] as const;\nconst NO_DUP_DURATION = 1200;\n\ntype MsgType = import('antd/lib/message').MessageType | 'ignored';\ntype Methods = typeof validMethods[number];\n/** 单位：s，提示展现多少s后消失 */\ntype DisplayDuration = number;\n/** 单位：ms, 该指定毫秒时间内出现的重复提示会被忽略掉，小于0时无该规则 */\ntype NoDupDuration = number;\n\nfunction _callMessageMethod(method: Methods, cb: (arg: any) => void, content: React.ReactNode, displayDuration: DisplayDuration, noDupDuration: NoDupDuration) {\n  if (!validMethods.includes(method)) {\n    console.error(`messageService call invalid method[${method}]`);\n    return cb('ignored');\n  }\n\n  // 直接提示，无重复校验规则\n  if (noDupDuration < 0) {\n    return cb(message[method](content, displayDuration));\n  }\n\n  const key = `${method}_${content}`;\n  const tipTimer = key2tipTimer[key];\n  if (tipTimer) {\n    // 忽略本次提示\n    return cb('ignored');\n  }\n\n  key2tipTimer[key] = setTimeout(() => {\n    delete key2tipTimer[key];\n  }, noDupDuration);\n\n  cb(message[method](content, displayDuration));\n}\n\n/**\n * 通用的提示方式，动态传参决定提示类型\n */\nexport function call(method: Methods, content: React.ReactNode, displayDuration: DisplayDuration = 3,\n  noDupDuration: NoDupDuration = NO_DUP_DURATION\n) {\n  return new Promise((resolve) => {\n    _callMessageMethod(method, resolve, content, displayDuration, noDupDuration);\n  }) as Promise<MsgType>;\n}\n\n/**\n * 普通提示\n */\nexport function info(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('info', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 错误提示\n */\nexport function error(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('error', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 成功提示\n */\nexport function success(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('success', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 警告提示\n */\nexport function warn(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('warn', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 警告提示\n */\nexport function warning(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('warning', resolve, content, displayDuration, noDupDuration);\n  });\n}\n","import { MetaItem } from '../type';\n\nexport function getInitMetaData(hasMoreMode = false, pageSize = 50) {\n  return {\n    lockId: 'init_lock', // 用于控制多个fetcher刷新同一个表格时，总是只认最近调用的那一个返回的数据\n    /** 是否处于 hasMore 模式 */\n    hasMoreMode,\n    hasMore: true,\n    current: 1,\n    pageSize,\n    total: 0,\n    list: [] as any[],\n    loading: false,\n  };\n}\n\nexport function getInitialState() {\n  return {\n    meta: { } as Record<string, MetaItem>,\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { St } from './meta';\n\n// only value change will triiger this function to execute again\nexport function doubleCount(newState: St) {\n  // use input newState to calculate new value\n}\n\n","import * as obj from 'utils/obj';\nimport { getInitMetaData } from './state';\nimport { IAC, St } from './meta';\n\nfunction getTableMeta(meta: any, tableId: string) {\n  return obj.safeGet(meta, tableId, getInitMetaData());\n}\n\nexport function modTableMeta({ tableId, toMod }: any, moduleState: St) {\n  const { meta } = moduleState;\n  const tableMeta = getTableMeta(meta, tableId);\n  if (obj.isValidVal(toMod.pageSize) && typeof toMod.pageSize !== 'number') {\n    toMod.pageSize = parseInt(toMod.pageSize, 10);\n  }\n  obj.safeAssign(tableMeta, toMod);\n  return { meta };\n}\n\n/** 处理页码变更 */\nexport async function handlePageCurrentChange({ current, tableId, fetchFn }: any, _: St, ctx: IAC) {\n  await ctx.dispatch(modTableMeta, { tableId, toMod: { loading: true, current, lockId: Date.now() } });\n  await ctx.dispatch(fetchTableData, { tableId, fetchFn });\n}\n\n/** 翻到下一页 */\nexport async function handleNextPage({ tableId, fetchFn }: any, { meta }: St, ctx: IAC) {\n  const { current } = getTableMeta(meta, tableId);\n  await ctx.dispatch(handlePageCurrentChange, { current: current + 1, tableId, fetchFn });\n}\n\n/** 处理一页展示条数的变更 */\nexport async function handlePageSizeChange({ tableId, pageSize, fetchFn }: any, _: St, ctx: IAC) {\n  await ctx.dispatch(modTableMeta, { tableId, toMod: { loading: true, pageSize, lockId: Date.now() } });\n  await ctx.dispatch(fetchTableData, { tableId, fetchFn });\n}\n\nexport function clearTable({ tableId }: any, m: St, ctx: IAC) {\n  ctx.dispatch(modTableMeta, {\n    tableId,\n    toMod: { list: [], total: 0, loading: false },\n  });\n}\n\nexport async function fetchTableData({ tableId, fetchFn }: any, moduleState: St, ctx: IAC) {\n  const { meta } = moduleState;\n  const { current, pageSize, lockId, list: oldList, hasMoreMode } = getTableMeta(meta, tableId);\n\n  const res = await fetchFn({ current, pageSize, list: oldList });\n  if (!res) {\n    await ctx.dispatch(modTableMeta, {\n      tableId,\n      toMod: { loading: false },\n    });\n    return;\n  }\n\n  const { pageList, page_list, total = 0, hasMore = true } = res;\n  const list = pageList || page_list || [];\n  if (getTableMeta(meta, tableId).lockId !== lockId) {\n    return; // lockId已不对，这是一个较老生成的lockId，放弃执行当前函数，不触发刷新表格\n  }\n\n  const start = (current - 1) * pageSize;\n  list.forEach((v: any, idx: number) => {\n    if (v) v.__seq = start + (idx + 1);\n  });\n\n  let targetList = list;\n  if (hasMoreMode) {\n    targetList = oldList.concat(list);\n  }\n\n  await ctx.dispatch(modTableMeta, {\n    tableId,\n    toMod: { list: targetList, total, hasMore, loading: false },\n  });\n}\n","\n/*\n|--------------------------------------------------------------------------\n| 定义模块的lifecyle\n|--------------------------------------------------------------------------\n| 文档:  https://concentjs.github.io/concent-doc/guide/concept-module-lifecycle\n*/\nimport { IDispatch } from 'concent';\n// import * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n// 模块被concent加载完毕时触发，(可替代initState，将初始化逻辑移到reducer文件里)\n// export function loaded(dispatch: IDispatch) {}\n\n// 当前模块的第一个组件实例挂载完毕时触发，\n// 默认只触发一次，如需满足条件反复触发，return false即可\n// 注意此函数触发时机和实例相关，如果没有任何属于此模块的组件实例化，该函数不会被触发\nexport function mounted(dispatch: IDispatch) {\n  // dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认只触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  // dispatch(reducer.clear);\n}\n","import { IModActionCtx, IRefCtxM, ReducerCallerParams, IReducerFn, IAnyObj } from 'concent';\nimport { makeUseModel, makeUseModelWithSetup, makeUseModelWithSetupCuf } from 'concent-utils';\n// import { RootState, RootCu } from 'types/store';\nimport state, { St as ModuleState } from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\nexport const moduleName = 'GeneralTable';\n\nexport const modelDesc = {\n  state,\n  computed,\n  reducer,\n  lifecycle,\n};\n\nexport const model = { [moduleName]: modelDesc };\n\nexport type ModelDesc = typeof modelDesc;\nexport type ModuleName = typeof moduleName;\nexport type CallerParams = ReducerCallerParams | [IReducerFn, any];\nexport type ReducerFn = IReducerFn;\nexport type St = ModuleState;\n// export type RootInfo = { state: RootState, computed: RootCu };\nexport type RootInfo = { state: {}, computed: {} };\n/** 用于描述 reducer 函数第3位参数 actionCtx 的类型 */\nexport type IAC = IModActionCtx<RootInfo, ModelDesc>;\nexport type CtxPre<RefCu = IAnyObj, Extra = IAnyObj> = IRefCtxM<RootInfo, IAnyObj, ModelDesc, RefCu, Extra>;\n\nexport const useModelWithSetup = makeUseModelWithSetup<RootInfo, ModelDesc>(moduleName);\nexport const useModelWithSetupCuf = makeUseModelWithSetupCuf<RootInfo, ModelDesc>(moduleName);\nexport const useModel = makeUseModel<RootInfo, ModelDesc>(moduleName);\n\nexport default model;\n","import modelDesc from './meta';\nimport { configure } from 'concent';\n\n/**\n * 使用 configure接口配置模块，此时不用在 src/models/index 里导出该模块到全局\n * 但是需要注意组件的 index文件 第一行代码写下\n * import './model';\n * 以便先触发模块配置过程后再安全的导入其他使用了该模块的组件\n * 如需在别的页面或者组件里可以使用名字配合 src/configs/useC2Mod \n * 函数来消费该模块的数据和调用该模块的方法，将模块提升到 src/models/index 文件导出即可\n */\nconfigure(modelDesc);\n\nexport default modelDesc;\n","/* eslint-disable no-underscore-dangle,no-param-reassign */\nimport './model';\nimport React, { Fragment } from 'react';\nimport { Table, Pagination, Button } from 'antd';\nimport { getInitMetaData } from './model/state';\nimport { CtxPre, useModelWithSetup } from './model/meta';\nimport * as t from './type';\n\nconst setup = (ctx: CtxPre) => {\n  const {\n    tid: tableId, fetchAfterMounted = true, hasMoreMode = false, fetchFn: propsFetchFn,\n    pageSizeOptions = ['50', '100', '200'],\n  } = ctx.props;\n  const { ccUniqueKey } = ctx;\n  if (!ctx.state.meta[tableId]) {\n    const pageSize = parseInt(pageSizeOptions[0], 10) || 50;\n    ctx.state.meta[tableId] = getInitMetaData(hasMoreMode, pageSize);\n  }\n\n  ctx.on(['refreshTable', tableId], async (fetchFn) => {\n    const _fetchFn = fetchFn || propsFetchFn;\n    await ctx.mr.clearTable({ tableId }, ccUniqueKey);\n    await ctx.mr.handlePageCurrentChange({ tableId, current: 1, fetchFn: _fetchFn }, ccUniqueKey);\n  });\n  ctx.on(['clearTable', tableId], () => {\n    ctx.mr.clearTable({ tableId }, ccUniqueKey);\n  });\n  ctx.on(['refreshTableCurPage', tableId], (fetchFn) => {\n    const _fetchFn = fetchFn || propsFetchFn;\n    const tableMeta = ctx.state.meta[tableId];\n    ctx.mr.handlePageCurrentChange({ tableId, current: tableMeta.current, fetchFn: _fetchFn }, ccUniqueKey);\n  });\n\n  ctx.effect(() => {\n    if (fetchAfterMounted) {\n      handlePageCurrentChange(1);\n    }\n    return () => ctx.dispatch('clearTable', { tableId }, ccUniqueKey);\n  }, []);\n\n  const handlePageCurrentChange = (current: number) => {\n    const { fetchFn } = ctx.props; // fetchFn有可能会变，这里每次取最新的\n    ctx.mr.handlePageCurrentChange({ tableId, current, fetchFn }, ccUniqueKey)\n  };\n  const handelPageSizeChange = (page: number, pageSize: number) => {\n    const { fetchFn } = ctx.props;\n    ctx.mr.handlePageSizeChange({ tableId, pageSize, fetchFn }, ccUniqueKey);\n  };\n  const handleNextPage = () => {\n    const { fetchFn } = ctx.props;\n    ctx.mr.handleNextPage({ tableId, fetchFn }, ccUniqueKey);\n  };\n\n  return {\n    handlePageCurrentChange,\n    handelPageSizeChange,\n    handleNextPage,\n    pageSizeOptions,\n  };\n};\n\nexport type Props = t.Props;\nexport type FetchFn = t.FetchFn;\nexport type FetchFnParams = t.FetchFnParams;\n\n/**\n * #################[Code example]#####################\n * ```js\n *  const fetcher = ()=> xxxService.fetchData();\n *  <GeneralTable tid=\"xxxId\" fetchFn={fetcher} columns={yourColumnsDef} />\n * ```\n * ####################################################\n */\nexport function GeneralTable(props: t.Props) {\n  const { state, settings } = useModelWithSetup(setup, { props });\n  const {\n    tid, columns, rowKey = 'id', scroll = { x: '100%' }, hasMoreMode = false,\n    disableBtnWhenNoMore, size,\n  } = props;\n  const { list, loading, current, total, pageSize, hasMore } = state.meta[tid];\n  const { handelPageSizeChange, handlePageCurrentChange, handleNextPage, pageSizeOptions } = settings;\n\n  const renderBtn = () => {\n    if (disableBtnWhenNoMore && !hasMore) return <Button disabled style={{ width: '100%' }}>没有更多了</Button>;\n    return <Button onClick={handleNextPage} style={{ width: '100%' }}>加载更多</Button>;\n  };\n\n  // console.log(`%c@@@ GeneralTable ${props.tid}`, 'color:red;border:1px solid red;');\n  return (\n    <Fragment>\n      <Table rowKey={rowKey} columns={columns} dataSource={list} size={size}\n        loading={loading} pagination={false} scroll={scroll}\n      />\n      <div style={{ height: '19px', width: '100%' }} />\n      {hasMoreMode\n        ? renderBtn()\n        : (\n          <Pagination onShowSizeChange={handelPageSizeChange} onChange={handlePageCurrentChange}\n            current={current} total={total} showSizeChanger pageSizeOptions={pageSizeOptions}\n            pageSize={pageSize}\n          />\n        )\n      }\n    </Fragment>\n  );\n}\n\nexport default React.memo(GeneralTable);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"general_button__enkDX\",\"textbox\":\"general_textbox__36LfG\",\"asyncButton\":\"general_asyncButton__1glvj general_button__enkDX\",\"normalButton\":\"general_normalButton__29Hta general_button__enkDX\"};","\nexport function delay(ms = 1000) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","\n/**\n * delare module names in this file\n */\n\nexport const DEMO = 'Demo' as const;\nexport type T_DEMO = typeof DEMO;\n\nexport const DEMO_TODO_LIST = 'DemoTodoList' as const;\nexport type T_DEMO_TODO_LIST = typeof DEMO_TODO_LIST;\n\nexport const DEMO_CLONED = 'DemoCloned' as const;\nexport type T_DEMO_CLONED = typeof DEMO_CLONED;\n\nexport const COUNTER = 'Counter' as const;\nexport type T_COUNTER = typeof COUNTER;\n\nexport const HOME = 'Home' as const;\nexport type T_HOME = typeof HOME;\n\n// 接入申请页面\nexport const APPLY_CONFIG = 'ApplyConfig' as const;\nexport type T_APPLY_CONFIG = typeof APPLY_CONFIG;\n\n// 接入列表页面\nexport const APPLY_LIST = 'ApplyList' as const;\nexport type T_APPLY_LIST = typeof APPLY_LIST;\n","/**\n * 员工名字服务\n */\n\nimport debounce from 'lodash/debounce';\n\nfunction getStaffList(): Array<[string, string]> {\n  // @ts-ignore\n  return window['_staffList'] || [];\n}\n\nlet isInitCalled = false;\n\n/**\n * 需要用员工数据的组件，需要在didMount时先调用此方法\n * 该方法会自己会保证只真正的调用一次\n */\nexport function initData() {\n  if (isInitCalled) return;\n  // isInitCalled = true;\n  // const userScript = document.createElement('script');\n  // userScript.src = `http://www.youstafname.com?v=${new Date().toDateString().replace(/ /g, '')}`;\n  // userScript.async = true;\n  // document.head.appendChild(userScript);\n\n  // @ts-ignore \n  window['_staffList'] = [\n    ['jack', 'jack(Beijing)'],\n    ['mark', 'mark(Beijing)'],\n    ['zzk', 'zzk(NewYork)'],\n    ['hi concent', 'concent(Landon)'],\n    ['hi concent2', 'concent(Beijing)'],\n    ['hi concent3', 'concent(ShangHai)'],\n  ];\n}\n\n/**\n * 查询用户\n * 为0时默认取10个\n * 长度大于2的字符串才开始真正匹配\n * @param {string} toMatchStr\n */\nexport function searchUsers(toMatchStr: string): Array<[string, string]> {\n  if (toMatchStr.length === 0) return getStaffList().slice(0, 10);\n  if (toMatchStr.length < 2) return [];\n  const pattern = new RegExp(`^${toMatchStr}`);\n  return getStaffList().filter((item) => {\n    const [rtxname] = item;\n    return pattern.test(rtxname);\n  }).slice(0, 10);\n}\n\n/**\n * @type {(toMatchStr:string)=>string[]}\n * 防抖动的用户查询操作\n */\nexport const delaySearchUsers = debounce(searchUsers, 300);\n","\n\n/**\n * 将list转为map\n * @param list\n * @param keyNameOrFn 选择哪个key的值作为map的key，也可以是一个动态生成key的函数\n * @param getValue\n*/\nexport function toMap<T, V extends any = T>(list: T[], keyNameOrFn: keyof T | ((value: T) => string), getValue?: (value: T) => any): Record<string, V> {\n  const map = {} as Record<string, V>;\n  if (!list) return map;\n  list.forEach(v => {\n    const anyV = v as any;\n    let mapKey;\n    if (typeof keyNameOrFn === 'function') mapKey = keyNameOrFn(v);\n    else mapKey = anyV[keyNameOrFn];\n\n    if (getValue) map[mapKey] = getValue(v);\n    else map[mapKey] = anyV;\n  });\n  return map;\n}\n\n\nexport function removeDupStrItem(oriList: string[], toRemoveList: string[]) {\n  const newList: string[] = [];\n  oriList.forEach(item => !toRemoveList.includes(item) && newList.push(item));\n  return newList;\n}\n\n\nexport function lastItem<T>(arr: T[]): T {\n  return arr[arr.length - 1];\n}\n\nexport function nodupStrPush(oriList: string[], toPush: string) {\n  if (!oriList.includes(toPush)) oriList.push(toPush);\n};\n\ntype PrimitiveItem = number | string;\n/**\n * merge([1,2,3], [4,5,6])\n * @param listArgs - 多个list参数\n */\nexport function merge<T extends PrimitiveItem>(...listArgs: T[][]) {\n  let tmpList: T[] = [];\n  listArgs.forEach(list => tmpList = tmpList.concat(list));\n  const set = new Set(tmpList);\n  tmpList = Array.from(set);\n  // listArgs.forEach(list => list.forEach(item => nodupPush(tmpList, item)));\n  return tmpList;\n}\n\n/**\n * 区别于 merge， 类型上支持 混合类型的数组一起 merge\n * merge([1,2,3], ['5','6'], [8,1,2])\n * @param listArgs - 多个list参数\n */\nexport function mergeMix(...listArgs: PrimitiveItem[][]) {\n  return merge(...listArgs);\n}\n","import React from 'react';\nimport styles from \"./general.module.css\";\n\ninterface IBtn {\n  className?: string;\n}\nfunction ButtonBase(props: IBtn & React.Props<HTMLButtonElement>) {\n  return (\n    <button {...props}>\n      {props.children}\n    </button>\n  );\n}\n\nexport function Button(props: any) {\n  return <ButtonBase className={styles.button} {...props} />\n}\n\nexport function AsyncButton(props: React.Props<any>) {\n  return <ButtonBase className={styles.asyncButton} {...props} />\n}\n\n\ninterface IBlankProps {\n  children?: React.ReactNode;\n  type?: 'horizon' | 'vertical';\n  height?: string;\n  width?: string;\n  style?: React.CSSProperties;\n}\n\nexport function Blank({ children = '', type = 'horizon', height = '16px', width = '28px', style = {} }: IBlankProps) {\n  const mergedStyle = { display: 'inline-block', width, height, ...style };\n  if (type === 'vertical') mergedStyle.display = 'block';\n\n  return (\n    <div style={mergedStyle}>{children}</div>\n  );\n}\n\nexport function NormalBlank(props: { width?: string }): React.ReactElement {\n  return <Blank {...{ width: '8px', ...props }} />;\n}\n\nexport function VerticalBlank(props: { height?: string }): React.ReactElement {\n  return <Blank {...{ type: 'vertical', ...props }} />;\n}\n\n\nexport function EmptyView() {\n  return <span style={{ display: 'none' }}></span>\n}\n","/**\n * concent 相关的一些公共封装函数\n */\nimport {\n  useConcent, reducer, getState as getSt, getGlobalState as getGst, emit, getComputed,\n  ReducerCallerParams, IReducerFn, IActionCtxBase, cst, MODULE_DEFAULT,\n  ICtxBase, IAnyObj, SettingsType, ComputedValType, SetupFn, MultiComputed,\n} from 'concent';\nimport { noop } from 'utils/fn';\nimport { CtxM, CtxMConn, CtxConn, Modules, RootRd, RootState, RootCu } from 'types/store';\nimport { EvMap } from 'types/eventMap';\n\nfunction priBuildCallParams(moduleName: Modules, connect: Array<Modules>, options?: Options<any, any, any, any, any, any>) {\n  const targetOptions = options || {};\n  const { setup, tag, extra, staticExtra, cuDesc, passCuDesc = true, props = {}, ccClassKey } = targetOptions;\n  const regOpt = { module: moduleName, connect, setup, props, tag, extra, staticExtra, cuDesc: null as any };\n  if (passCuDesc) regOpt.cuDesc = cuDesc;\n  return { regOpt, ccClassKey };\n}\n\n/**\n * 调用目标函数，用于对接 reducer里的 ghost函数\n * @param callerParams\n * @param ac\n */\nexport async function callTarget(callerParams: ReducerCallerParams | [IReducerFn, any], ac: IActionCtxBase) {\n  try {\n    // 支持 reducer文件里内部调用 ac.dispatch(loading, [targetFn, payload])\n    if (Array.isArray(callerParams)) {\n      const [fn, payload] = callerParams;\n      await ac.dispatch(fn, payload);\n    } else {\n      const { fnName, payload, renderKey, delay } = callerParams;\n      await ac.dispatch(fnName, payload, renderKey, delay);\n    }\n  } catch (err) {\n    alert(err.message);\n  }\n}\n\nexport interface ValidSetup {\n  (ctx: ICtxBase): IAnyObj | void;\n}\nexport interface ValidMapProps {\n  (ctx: ICtxBase): IAnyObj;\n}\nexport interface OptionsBase<\n  P extends IAnyObj,\n  CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj,\n  StaticExtra extends any,\n  Mp extends ValidMapProps\n  > {\n  props?: P;\n  tag?: string;\n  ccClassKey?: string;\n  extra?: Extra;\n  staticExtra?: StaticExtra;\n  /**\n   * 一个遗留的参数，对接useConcent的mapProps，每一轮渲染都会调用，返回结果可通过 ctx.mapped拿到\n   */\n  mapProps?: Mp;\n  cuDesc?: CuDesc;\n  /**\n   * 是否透传 cuSpec 给 useConcent函数，默认为true，\n   * 表示需要透传，此时用户不需要再setup函数体内调用 ctx.computed(cuSpec)\n   * 如果用户设置passCuSpec为false，表示传入 cuSpec 仅为了方便推导出refComputed类型，但不透传 cuSpec 给 useConcent函数\n   * 注意此时用户需要在 setup函数体内调用 ctx.computed(cuSpec) 来完成示例计算函数的定义，\n   * 否则 refComputed 里拿不到真正的计算结果\n   */\n  passCuDesc?: boolean;\n}\nexport interface Options<\n  P extends IAnyObj,\n  Setup extends ValidSetup,\n  CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj,\n  StaticExtra extends any,\n  Mp extends ValidMapProps\n  > extends OptionsBase<P, CuDesc, Extra, StaticExtra, Mp> {\n  setup?: Setup;\n}\n\n/**\n * 属于某个模块\n * use the target model context you want by passing a module name\n * 如需要全局任意地方可通过 useC2Mod('xx') 导出xx模块上下文来使用，\n * 需要在 src/models/index.js 显式的导出该模块\n *\n * -----------------------[Export example]-----------------------\n * ```js\n * import somePageModel from 'pages/SomePage/model';\n * import someCompModel from 'components/SomeComp/model';\n * const allModels = {...somePageModel,  ...someCompModel};\n * ```\n * ---------------------------------------------------------------\n *\n * 各种调用示例：\n * 需自己跳转到 components/_demosOfHook/useC2Mod 文件里查看\n * @see {useC2ModDemos.Example} - 简单示例\n * @see {useC2ModDemos.ExampleCallMr} - 调用moduleReducer\n * @see {useC2ModDemos.ExampleReadMcu} - 读取模块计算结果\n * @see {useC2ModDemos.ExampleSetup} - 配置setup\n * @see {useC2ModDemos.ExampleRefCu} - 定义实例计算\n * @param moduleName\n * @param options {Options} - 可选参数，见 Options定义\n */\nexport function useC2Mod<\n  M extends Modules, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(moduleName, [], options);\n  type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 使用默认模块（在没有重写$$default模块的情况下，默认模块是一个空模块）\n * @param options\n * @returns\n */\nexport function useC2DefaultMod<\n  Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], options);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 属于某个模块，连接多个模块\n */\nexport function useC2ModConn<\n  M extends Modules, Conn extends Array<Modules>, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, connect: Conn, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(moduleName, connect, options);\n  type Ctx = CtxMConn<P, M, Conn[number], SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 连接多个模块\n * ```js\n *  const { connectedState, cr } = useC2Conn(['mod1', 'mod2']);\n *  // connectedState.mod1.stateXxx\n *  // cr.mod1.methodXxx\n *\n * ```\n */\nexport function useC2Conn<\n  Conn extends Array<Modules>, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(connect: Conn, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, connect, options);\n  type Ctx = CtxConn<P, Conn[number], SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 适用于不属于任何模块，只是设置setup函数的场景\n * @param setup\n * @param options - see OptionsBase\n */\nexport function useSetup<\n  T extends SetupFn, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(setup: T, options?: OptionsBase<P, CuDesc, Extra, StaticExtra, Mp>) {\n  const mergedOptions = { setup, ...options };\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], mergedOptions);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<T>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  const { settings } = useConcent<{}, Ctx>(regOpt, ccClassKey);\n  return settings;\n}\n\n/**\n * useSetupCtx 会返回整个ctx对象，区别于 useSetup 只返回 settings\n * @param setup\n * @param options - see OptionsBase\n */\nexport function useSetupCtx<\n  T extends SetupFn, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(setup: T, options?: OptionsBase<P, CuDesc, Extra, StaticExtra, Mp>) {\n  const mergedOptions = { setup, ...options };\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], mergedOptions);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<T>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  const ctx = useConcent<{}, Ctx>(regOpt, ccClassKey);\n  return ctx;\n}\n\n\n/**\n * 为属于某个模块的 ctx 标记类型, 通常使用在class成员变量上 和 setup函数体内\n * 在class组件成员变量使用时不需要传递第三位参数ctx，组件实例化时会由concent注入并替换\n * 在setup函数里使用时，可直接传入已经创建好的ctx\n */\nexport function typeCtxM<\n  M extends Modules, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>, ctx?: any) {\n  noop(moduleName, options);\n  type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return (ctx || {}) as Ctx;\n}\n\n/**\n * useC2Mod的工厂函数，返回钩子函数的同时，也提供了帮助推导setup函数的ctx参数类型的辅助函数\n * 注意! 此工厂函数仅适用于 setup函数ctx参数不需要感知 props, extra 类型时，方可使用\n * @param moduleName\n * @param options\n * -----------------------[Code example]-----------------------\n * ```js\n *  const ret = makeUseC2Mod(\"Counter\");\n *   function setupA1(c: any) {\n *    const ctx = ret.typeCtx(c);\n *     const cu = ctx.computed({countX6: (n) => n.value * 6 });\n *     return { cu };\n *   }\n *   export function UseC2ModByFactory() {\n *     const ctx = ret.useC2Mod({ setup: setupA1 });\n *     return <h1>{ctx.state.bigValue} {ctx.settings.cu.countX6}</h1>\n *   }\n * ```\n * --------------------------------------------------------------\n */\nexport function makeUseC2Mod<M extends Modules>(moduleName: M) {\n  return {\n    /**\n     * 需要传入的 setup 函数\n     */\n    useC2Mod: <Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n      Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n      >(options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) => {\n      const { regOpt, ccClassKey } = priBuildCallParams(moduleName, [], options);\n      type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n      return useConcent<P, Ctx>(regOpt, ccClassKey);\n    },\n    /**\n     * 推导setup函数的ctx参数类型\n     */\n    typeCtx: (ctx: ICtxBase) => {\n      return ctx as CtxM<{}, M>;\n    },\n  };\n}\n\nexport const ccReducer = (reducer as unknown) as RootRd;\n\n/**\n * 获取 global模块的状态\n * 在已拥有 concent model 上下文、action 上下文的地方，\n * 推荐直接获取，代替调用此函数，因为直接获取数据时组件并不会订阅数据变化\n */\nexport function getGlobalState() {\n  const globalState = getGst<RootState>();\n  return globalState;\n}\n\n/**\n * 获取整个根状态\n * 注意直接获取数据时组件并不会订阅数据变化\n */\nexport function getRootState() {\n  const rootState = getSt<RootState>();\n  return rootState;\n}\n\n/**\n * 获取目标模块状态\n * 注意直接获取数据时组件并不会订阅数据变化\n */\nexport function getModelState<T extends Modules>(modelName: T) {\n  if (modelName) {\n    const modelState = getSt<RootState, T>(modelName);\n    return modelState;\n  }\n  throw new Error('miss modelName');\n}\n\n/**\n * 获取目标模块状态\n */\nexport function getModelComputed<T extends Modules>(modelName: T) {\n  if (modelName) {\n    const modelComputed = getComputed<RootCu, T>(modelName);\n    return modelComputed;\n  }\n  throw new Error('miss modelName');\n}\n\ntype EvKeys = keyof EvMap;\n/**\n * 发射事件\n * @param eventName - 事件名\n * @param args\n */\nexport function ccEmit<E extends EvKeys, T extends EvMap[E]>(eventName: E, ...args: T) {\n  emit(eventName, ...args);\n}\n\n/**\n * 携带id的发射事件\n * @param eventDesc - [eventName, id]\n * @param args\n */\nexport function ccEmitId<E extends EvKeys, T extends EvMap[E]>(eventDesc: [E, string], ...args: T) {\n  emit(eventDesc, ...args);\n}\n\ntype OnFn = <E extends EvKeys>(eventName: E, cb: (...args: EvMap[E]) => void) => void;\n/**\n * 配合EvMap，为ctx.on装配类型\n * 外部调用时传入具体的事件名就推导出cb函数的参数列表类型\n *\n    function setup(ctx: Ctx){\n      const on = ctxOn(ctx);\n      on('xxx',(a, b)=>{\n       // 此处ts能感知a、b的具体类型\n      })\n    }\n */\nexport function ctxOn(ctx: ICtxBase) {\n  return ctx.on as OnFn;\n}\n\ntype OnIdFn = <E extends EvKeys>(eventDesc: [E, string], cb: (...args: EvMap[E]) => void) => void;\n/**\n * 可以携带id的ctx.on\n * @param ctx\n */\nexport function ctxOnId(ctx: ICtxBase) {\n  return ctx.on as OnIdFn;\n}\n","\nexport function isLocalMode() {\n  return window.location.port !== '';\n}\n","import Color from 'color';\n\nfunction privSetColor(key: string, val: string) {\n  if (window.document) {\n    window.document.documentElement.style.setProperty(key, val);\n  }\n}\n\nexport function hex2rgb(hexColor: string) {\n  const c = new Color(hexColor);\n  const rgb = c.object();\n  return rgb;\n}\n\nexport function hex2rgbString(hexColor: string) {\n  const rgb = hex2rgb(hexColor);\n  return `${rgb.r}, ${rgb.g}, ${rgb.b}`;\n}\n\nexport function getThemeColorLight(hexColor: string, lighten: number = 0.8) {\n  const c = new Color(hexColor);\n  const themeColorLight = c.lighten(lighten).hex();\n  return themeColorLight;\n}\n\nexport function changeThemeColor(hexColor: string) {\n  privSetColor('--theme-color', hexColor);\n}\n\nexport function changeThemeColorLight(themeColorLight: string) {\n  privSetColor('--theme-color-light', themeColorLight);\n}\n\nexport function changeThemeColorRGB(themeColorRGB: string) {\n  privSetColor('--theme-color-rgb', themeColorRGB);\n}\n","\nimport { SiderTheme } from 'antd/lib/layout/Sider';\nimport * as colorServ from 'services/color';\nimport * as commonUtil from 'utils/common';\n\nfunction getInitialState() {\n  const themeColor = '#8B572A';\n  const themeColorRGB = colorServ.hex2rgbString(themeColor);\n\n  return {\n    /** 顶部是否固定 */\n    fixHeader: false,\n    siderVisible: true,\n    siderTheme: 'dark' as SiderTheme,\n    headerTheme: 'dark' as SiderTheme,\n    /** 站点的主题颜色 */\n    themeColor,\n    themeColorRGB,\n    themeColorLight: colorServ.getThemeColorLight(themeColor),\n    someInfo: 'overWrite built-in module global\\'s state',\n\n    /** 系统是否准备就绪，包括登录、配置数据拉取等动作完成才是就绪 */\n    isAppReady: false,\n    userName: '',\n    userIcon: '',\n    /** 当前登录者是否是管理员 */\n    isAdmin: false,\n    /** 处于innerMock时，httpService的请求结果会直接从模拟文件获取（同时还会配合 excludedMockApis 名单），注意此时不会从浏览器发出请求 */\n    isInnerMock: commonUtil.isLocalMode(),\n    /** isInnerMock 为 true 时，只要实现了的mock函数，如果没有在 excludedMockApis 名单里， 都会去被调用 */\n    excludedMockApis: [\n    ] as string[],\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { St } from './meta';\nimport * as colorServ from 'services/color';\n\nexport function toggleSiderVisible(p: any, moduleState: St): Partial<St> {\n  return { siderVisible: !moduleState.siderVisible }\n}\n\nexport function changeThemeColor(themeColor: string): Partial<St> {\n  colorServ.changeThemeColor(themeColor);\n  // 修改浅色\n  const themeColorLight = colorServ.getThemeColorLight(themeColor);\n  colorServ.changeThemeColorLight(themeColorLight);\n  // 修改主题色rgb值\n  const themeColorRGB = colorServ.hex2rgbString(themeColor);\n  colorServ.changeThemeColorRGB(themeColorRGB);\n  return { themeColor, themeColorLight: themeColorLight, themeColorRGB }\n}\n\nexport function switchSiderTheme(checked: boolean, moduleState: St): Partial<St> {\n  return { siderTheme: checked ? 'dark' : 'light' };\n}\n\nexport function switchHeaderTheme(checked: boolean, moduleState: St): Partial<St> {\n  return { headerTheme: checked ? 'dark' : 'light' };\n}\n\nexport function switchFixHeader(checked: boolean, moduleState: St): Partial<St> {\n  return { fixHeader: checked };\n}\n\nexport function changeIsInnerMock(checked: boolean, moduleState: St): Partial<St> {\n  return { isInnerMock: checked };\n}\n\nexport async function prepareApp(): Promise<Partial<St>> {\n  // 模拟接口自动登录\n  const info = await Promise.resolve({ user: 'hi concent pro', icon: 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3662109890,1098716941&fm=15&gp=0.jpg', isAdmin: true })\n\n  return { userName: info.user, userIcon: info.icon, isAdmin: info.isAdmin, isAppReady: true };\n}\n","\nexport const DEMO = '/demo';\n\nexport const DEMO_USE_SETUP = '/demo-use-setup';\n\nexport const SIMPLE_LIST = '/simple-list';\n","\nexport const siderWidth = 200;\nexport const siderWidthPx = `${siderWidth}px`;\n/** 最底层的背景色 */\nexport const buttomBgColor = '#f0f2f5';\nexport const contentBgColor = '#fff';\n\nexport const webHeaderImg = 'https://raw.githubusercontent.com/fantasticsoul/assets/master/c2pro/c2pro-banner.png';\nexport const img404 = '404_img_url';\nexport const img403 = '403_img_url';\n","import * as routerPathCst from './routerPath';\nimport * as sysCst from './sys';\n\nexport const routerPath = routerPathCst;\nexport const sys = sysCst;\n\n","import { St } from './state';\nimport { sys } from 'configs/constant';\n\nexport function contentLayoutStyle(n: St) {\n  const { siderVisible, fixHeader } = n;\n  const minHeight = 'calc(100vh - 120px)';\n  const paddingTop = fixHeader ? '48px' : '0';\n\n  return siderVisible\n    ? { marginLeft: sys.siderWidthPx, minHeight, paddingTop }\n    : { marginLeft: '0', paddingTop, minHeight };\n}\n\nexport function headerStyle(n: St) {\n  const { headerTheme, themeColor, siderVisible, fixHeader } = n;\n  let hstyle: React.CSSProperties = { marginLeft: '', color: '', backgroundColor: '' };\n  if (fixHeader) {\n    hstyle = { marginLeft: '', color: '', backgroundColor: '', position: 'fixed' as const, left: '0', right: '0' };\n  }\n  siderVisible ? hstyle.marginLeft = sys.siderWidthPx : hstyle.marginLeft = '0';\n  headerTheme === 'dark' ? hstyle.color = 'white' : hstyle.color = themeColor;\n  headerTheme === 'dark' ? hstyle.backgroundColor = '#001529' : hstyle.backgroundColor = 'white';\n  return hstyle;\n}\n\nexport function siderIconDes(n: St) {\n  return n.siderVisible ? 'left' : 'right';\n}\n\nexport function siderThemeSwitchChecked(n: St) {\n  const { siderTheme } = n;\n  return siderTheme === 'dark' ? true : false;\n}\n\nexport function headerThemeSwitchChecked(n: St) {\n  const { headerTheme } = n;\n  return headerTheme === 'dark' ? true : false;\n}\n","import { IDispatch } from 'concent';\nimport { St } from './state';\nimport * as rd from './reducer';\nimport * as staffServ from 'services/staff';\n\nexport function loaded(dispatch: IDispatch, moduleState: St) {\n  const { themeColor } = moduleState;\n  // 写入当前配置主题色\n  dispatch(rd.changeThemeColor, themeColor);\n\n  staffServ.initData();\n}\n","import state from './state';\nimport * as reducer from './reducer';\nimport * as computed from './computed';\nimport * as lifecycle from './lifecycle';\n\nexport default {\n  state, reducer, computed, lifecycle,\n};\n","import { St } from './state';\n\n// only value change will triiger this function to execute again\nexport function doubleCount({ value }: St) {\n  return value * 2;\n}\n","import { St } from './state';\nimport { VoidPayload, AC } from 'types/store';\nimport { T_COUNTER } from 'configs/c2Mods';\n\ntype IAC = AC<T_COUNTER>;\n\nconst delay = (ms = 1000) => new Promise(r => setTimeout(r, ms));\n\nexport function incrementBigValue(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { bigValue: moduleState.bigValue + 50 };\n}\n\nexport function incrementOne(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value + 1 };\n}\n\nexport function decrementOne(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value - 1 };\n}\n\nexport function increment(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value + moduleState.toInc };\n}\n\nexport function incBy(payload: number, moduleState: St): Partial<St> {\n  return { value: moduleState.value + payload };\n}\n\nexport async function incrementAsync(payload: VoidPayload, moduleState: St, ac: IAC): Promise<Partial<St>> {\n  await delay();\n  // or just write ac.dispatch of return\n  // await ac.dispatch(incrementByAmount, amount);\n  return { value: moduleState.value + moduleState.toInc };\n}\n\nexport function foo() {\n  console.log('call foo');\n}\n\nexport function clear() {\n  console.log('call clear');\n}\n","import { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n\n// 当前模块的第一个组件实例挂载完毕时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import state from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\nexport default {\n  state,\n  computed,\n  reducer,\n  lifecycle,\n};\n","\nfunction getInitialState() {\n  return {\n    value: 0,\n    bigValue: 100,\n    toInc: 2,\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","\nfunction getInitialState() {\n  return {\n    value: 0,\n    bigValue: 100,\n    keyword: '',\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { St } from './state';\n\n// only value change will triiger this function to execute again\nexport function doubleCount({ value }: St) {\n  return value * 2;\n}\n\nexport function formattedInput({ keyword }: St) {\n  return `用户正在输入 ${keyword}`;\n}\n\n","\nexport function purify(url: string) {\n  const [pureUrl] = url.split('?');\n  return pureUrl;\n}\n","/* eslint-disable */\nimport cute from 'cute-http';\nimport qs from 'qs';\nimport axios from 'axios';\nimport * as messageService from './message';\nimport * as objUtil from 'utils/obj';\nimport * as timerUtil from 'utils/timer';\nimport * as urlUtil from 'utils/url';\nimport * as c2Serv from 'services/concent';\n// import resData from 'assets/response-data';\n\nexport interface IReqOptions {\n  /**\n   * default = true, 是否返回服务器端响应的业务逻辑数据给调用方\n   * 服务器完整的返回数据reply形如：{data:any, code:string, msg:string},\n   * true：返回reply.data\n   * false：返回reply,\n   */\n  returnLogicData?: boolean;\n  defaultValue?: any;\n  /**\n   * 请求的业务前缀，默认 undefined，仅当用户需要根据前缀来区分不同环境时，才需要定义\n   * 调用语句示例 httpService.get(url:string, data:IDataPrams, { bizServiceName: string })\n   * url: '/some/action', bizServiceName: 'category-test' ---> '/category-test/some/action'\n   * url: '/some/action', bizServiceName: 'category' ---> '/category/some/action'\n   * url: '/some/action', bizServiceName: 'www.a.com/xx' ---> 'www.a.com/xx/some/action'\n   * 但要注意调用url包含了协议时，定义的 bizServiceName 是无效的，并不会影响实际发起的请求\n   * url: 'http://www.a.com/some/action', bizServiceName: 'www.b.com/xx' ---> 'http://www.a.com/some/action''\n   *\n   * 推荐用户写个函数获取当前调用api的业务前缀，如 getCateApiPrefix(): 'category' | 'category-test'\n   * 然后动态的传递给 httpService.get 调用，此时调用语句形如：\n   * httpService.get('/some/action', null, { bizServiceName: getCateApiPrefix() })\n   *\n   * 此前缀不影响 assets/mock/apiData/index.ts 文件的key映射\n   * 调用 httpService.get('/some/action', null, { bizServiceName: 'category' })\n   * key 依然是写 'get /some/action'\n   */\n  bizServiceName?: string,\n  /**\n   * default = true\n   * 是否检查服务返回code，并做错误提示\n   */\n  check?: boolean;\n  /**\n   * default = true\n   * 当check为true时生效，是否alert提示错误信息\n   */\n  alertErrorMsg?: boolean;\n}\n\ntype DataParams = Record<string, any> | null;\ninterface MultiItem {\n  url: string;\n  data: DataParams;\n}\n\ncute.setConfig({\n  retryCount: 3, // 重试次数\n  timeout: 50000, // 超时时间\n  // debug: true, // 打开debug模式\n});\n\nconst getXFormOptions = () => ({\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n  },\n  withCredentials: true,\n});\nconst generalOptions = {\n  headers: { 'Content-Type': 'application/json' },\n  withCredentials: true,\n  mockData: null as any,\n\n  // replyReceived: (reply, m) => {\n  //   // console.log('reply.config.url', reply.config.url);\n  //   cute.post('/collectData', { data: reply.data, method: m, url: reply.config.url }, {\n  //     headers: { 'Content-Type': 'application/json' },\n  //     withCredentials: true,\n  //   });\n  // }\n};\n\n// 测试模式，拦截请求，直接响应mock数据\n// if (process.env.TEST_MODE === '1') {\n//   generalOptions.mockData = (method: string, url: string, inputData: any) => {\n//     const key = `${method}${url}`;\n//     // console.log(`return mock data for ${key}`);\n//     return Promise.resolve({ data: resData[key] });\n//   }\n// }\n\nfunction seperateOptions(options: any = {}) {\n  const {\n    returnLogicData, defaultValue = '', check = true, alertErrorMsg = true,\n    failStrategy = cute.const.KEEP_ALL_BEEN_EXECUTED, bizServiceName = '', ...cuteOptions\n  } = options;\n  // cute-http的调用相关可选参数\n  cuteOptions.failStrategy = failStrategy;\n  return { logicOptions: { returnLogicData, defaultValue, check, alertErrorMsg, bizServiceName }, cuteOptions };\n}\n\nconst checkCode = (axiosReply: any, url = '', checkOptions: IReqOptions = {}) => {\n  const { returnLogicData = true, check = true } = checkOptions;\n\n  const { statusCode = 0 } = axiosReply;\n  const httpResponse = axiosReply.data || axiosReply;\n\n  if (statusCode >= 400) throw new Error(`服务器内部错误${statusCode}`);\n  const { status = '0', message = '接口格式错误', response, code, data, msg } = httpResponse;\n  const errMsg = msg || message;\n\n  let toReturn = null;\n  // 直接返回 axiosReply.data, 即服务器返回的原始数据\n  if (!returnLogicData) {\n    toReturn = httpResponse;\n  } else {\n    // 服务端返回的业务相关的数据\n    toReturn = data || response;\n  }\n\n  if (!check) return toReturn;\n\n  // 这里 status 和 code 都要判断......\n  if (typeof status !== 'undefined' && status != '0') {\n    const err = new Error(errMsg) as any;\n    err.status = status;\n    err.url = url;\n    throw err;\n  }\n\n  if (typeof code !== 'undefined' && code != 0) {\n    throw new Error(`url: ${url} ${errMsg}`);\n  }\n\n  return toReturn;\n};\n\nconst attachPrefixAndData = (url: string, data: DataParams | '', bizServiceName?: string) => {\n  const pureUrl = url.replace(/ /g, '');\n  let prefixedUrl = `${pureUrl}`;\n\n  if (!pureUrl.startsWith('http')) {\n    if (bizServiceName) {\n      if (bizServiceName.startsWith('http')) prefixedUrl = `${bizServiceName}${pureUrl}`;\n      else prefixedUrl = `/${bizServiceName}${pureUrl}`;\n    }\n  }\n\n  if (!objUtil.isNull(data)) {\n    const dataQueryStr = qs.stringify(data);\n    if (pureUrl.includes('?')) return `${prefixedUrl}&${dataQueryStr}`;\n    return `${prefixedUrl}?${dataQueryStr}`;\n  }\n\n  return prefixedUrl;\n};\n\nfunction handleError(error: any, options: any, defaultValue: any) {\n  if (!defaultValue) {\n    if (options.check && options.alertErrorMsg) messageService.error(error.message);\n    throw error;\n  }\n  if (error && error.response && error.response.status >= 400) {\n    messageService.error(`服务器内部错误 ${error.response.status}`);\n  }\n\n  // 返回默认值\n  return defaultValue;\n}\n\nasync function sendRequest(method: string, url: string, data?: DataParams, options = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n\n  try {\n    const mergedOpt = { ...generalOptions, ...cuteOptions };\n    let reply;\n    const { isInnerMock, excludedMockApis } = c2Serv.getGlobalState();\n\n    const getRealReply = async () => {\n      let reply;\n      if (method === 'get') {\n        reply = await cute[method](attachPrefixAndData(url, data || '', bizServiceName), '', mergedOpt);\n      } else {\n        reply = await cute[method](attachPrefixAndData(url, '', bizServiceName), data, mergedOpt);\n      }\n      return reply;\n    };\n\n    if (isInnerMock) {\n      const { mockImpl } = await import('../assets/mock/mockHttpService');\n      if (method === 'get' || method === 'post') {\n        await timerUtil.delay(300);\n        const fakeHttp = mockImpl();\n        const isUrlBeenMocked = fakeHttp.hasMockedFn(method, url);\n        // 已实现mock、没在排除名单里\n        if (isUrlBeenMocked && !excludedMockApis.includes(`${method} ${urlUtil.purify(url)}`)) {\n          const mockResult = fakeHttp[method](url, data);\n          // 包裹成类 axiosReply 对象\n          reply = { statusCode: 200, data: mockResult };\n        } else {\n          reply = await getRealReply();\n        }\n      } else {\n        throw new Error(`method[${method}] not implemented in mockHttpService`);\n      }\n    } else {\n      reply = await getRealReply();\n    }\n\n    return checkCode(reply, url, { returnLogicData, check });\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\nasync function get(url: string, data?: DataParams, options?: IReqOptions) {\n  return sendRequest('get', url, data, options);\n}\n\nasync function post(url: string, body?: DataParams, options?: IReqOptions) {\n  return sendRequest('post', url, body, options);\n}\n\nasync function put(url: string, body?: DataParams, options?: IReqOptions) {\n  return sendRequest('put', url, body, options);\n}\n\n/**\n * 以application/x-www-form-urlencoded的形式提交数据\n * TODO: 删除postFormData\n * @param {*} url\n * @param {*} data\n * @param {*} options\n */\nasync function sendXForm(method: string, url: string, data: DataParams, options = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n  try {\n    const xFormOptions = getXFormOptions();\n    const mergedOpt = { ...xFormOptions, ...cuteOptions };\n\n    let _data = data;\n    if (objUtil.isObject(data)) {\n      _data = {};\n      for (let key in data) {\n        const val = data[key];\n        // x-www-form提交的话，对象 {} [] 都要转为string\n        _data[key] = objUtil.isObject(val) ? JSON.stringify(val) : val;\n      }\n    }\n\n    const reply = await cute[method](attachPrefixAndData(url, '', bizServiceName), qs.stringify(_data), mergedOpt);\n    return checkCode(reply, url, { returnLogicData, check });\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\nasync function xFormPost(url: string, data: DataParams, options = {}) {\n  return sendXForm('post', url, data, options);\n}\n\nasync function xFormPut(url: string, data: DataParams, options = {}) {\n  return sendXForm('put', url, data, options);\n}\n\nasync function multiGet(urls: string[], options: IReqOptions = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n  try {\n    delete options.returnLogicData;\n    const _urls = urls.map(url => attachPrefixAndData(url, '', bizServiceName));\n    const replyList: any[] = await cute.multiGet(_urls, { ...generalOptions, ...cuteOptions });\n    return replyList.map((r, idx) => checkCode(r, _urls[idx], { returnLogicData, check }));\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\nasync function multiPost(items: MultiItem[], options: IReqOptions = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n\n  try {\n    delete options.returnLogicData;\n    items.forEach(item => item.url = attachPrefixAndData(item.url, '', bizServiceName));\n    const replyList: any[] = await cute.multiPost(items, { ...generalOptions, ...cuteOptions });\n    return replyList.map((r, idx) => checkCode(r, items[idx].url, { returnLogicData, check }));\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\n/**\n * 通常用于文件提交\n * Content-Type 为 multipart/form-data\n */\nasync function postFormData(url: string, data: DataParams, options: IReqOptions) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n  const finalUrl = attachPrefixAndData(url, '', bizServiceName);\n\n  const formData = new FormData();\n  data && Object.keys(data).forEach((key) => {\n    const val = data[key];\n    if (Object.prototype.hasOwnProperty.call(data, key) && !!data[key]) {\n      if (val instanceof File) {\n        formData.append(key, val);\n      } else {\n        const appendVal = objUtil.isObject(val) ? JSON.stringify(val) : val;\n        formData.append(key, appendVal);\n      }\n    }\n  });\n\n  const instance = axios.create({ withCredentials: true });\n\n  try {\n    const reply = await instance.post(finalUrl, formData, cuteOptions);\n    return checkCode(reply, url, { returnLogicData, check });\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\n/**\n *\n * @param {string} url - 请求地址\n * @param {Record<string, any>} data - ost请求需要的参数\n */\nfunction downloadFile(url: string, data: Record<string, any> = {}) {\n  const form = document.createElement('form');\n  form.style.display = 'none';\n  form.action = url;\n  form.method = 'post';\n  document.body.appendChild(form);\n  if (data) {\n    // 动态创建input并给value赋值\n    for (const key in data) {\n      const input = document.createElement('input');\n      input.type = 'hidden';\n      input.name = key;\n      const val = data[key];\n      input.value = objUtil.isObject(val) ? JSON.stringify(val) : val;\n      form.appendChild(input);\n    }\n  }\n  form.submit();\n  form.remove();\n}\n\nexport default {\n  downloadFile,\n  get,\n  put,\n  post,\n  xFormPost,\n  xFormPut,\n  postFormData,\n  multiGet,\n  multiPost,\n};\n","import http from 'services/http';\n\nexport async function getTodoList() {\n  const ret = await http.get('/api/todo/list');\n  return ret;\n}\n\nexport async function queryTodoList(data: { keyword: string }) {\n  const ret = await http.get('/api/todo/query', data);\n  return ret;\n}\n","import * as todoServ from 'services/domain/todo';\nimport { VoidPayload, AC } from 'types/store';\nimport { St } from './state';\n\ntype IAC = AC<'Counter'>;\n\nexport function forCopy(payload: VoidPayload, moduleState: St, ac: IAC) {\n  console.log('call ac.setState or ac.dispatch when needed', ac.setState);\n}\n\ninterface FetchListPayload {\n  current: number,\n  pageSize: number,\n}\nexport async function fetchList({ current, pageSize }: FetchListPayload, moduleState: St) {\n  const ret = await todoServ.getTodoList();\n  return { pageList: ret.list, total: ret.total };\n}\n\nexport function foo() {\n  console.log('call foo');\n}\n\nexport function clear() {\n  console.log('clear');\n  return { value: 1 };\n}\n\nexport function addBig(payload: VoidPayload, moduleState: St) {\n  const { bigValue } = moduleState;\n  return { bigValue: bigValue + 1 };\n}\n","\n/*\n|--------------------------------------------------------------------------\n| 定义模块的lifecyle\n|--------------------------------------------------------------------------\n| 文档:  https://concentjs.github.io/concent-doc/guide/concept-module-lifecycle\n*/\nimport { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n// 模块被concent加载完毕时触发，(可替代initState，将初始化逻辑移到reducer文件里)\n// export function loaded(dispatch: IDispatch) {}\n\n// 当前模块的第一个组件实例挂载完毕时触发，\n// 默认只触发一次，如需满足条件反复触发，return false即可\n// 注意此函数触发时机和实例相关，如果没有任何属于此模块的组件实例化，该函数不会被触发\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认只触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import state from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\n\nexport default {\n  state,\n  reducer,\n  computed,\n  lifecycle,\n}\n","import { T_DEMO } from 'configs/c2Mods';\nimport { VoidPayload, AC } from 'types/store';\nimport { St } from './state';\nimport http from 'services/http';\n\ntype IAC = AC<T_DEMO>;\n\nexport function aNormalMethod(payload: VoidPayload, moduleState: St, actionCtx: IAC) {\n  console.log('for copy - ', actionCtx.dispatch);\n}\n\nexport function changeDesc(payload: string | VoidPayload, moduleState: St, actionCtx: IAC) {\n  let desc = `module--${actionCtx.module} ${Date.now()}`;\n  if (payload) {\n    if (typeof payload === 'string') {\n      desc = payload;\n    } else {\n      desc = `module--${actionCtx.module} ${payload.currentTarget.nodeName} ${Date.now()}`;;\n    }\n  }\n  return { desc };\n}\n\ninterface FetchListP{\n  current: number,\n  pageSize: number,\n}\nexport async function fetchList({ current, pageSize }: FetchListP): Promise<{ pageList: any[], total: number }> {\n  const todos = await http.get('api/todos');\n  console.log(current, pageSize, todos);\n  return { pageList: todos, total: 1000 };\n}\n\nexport function foo(){\n  console.log('call foo');\n}\n\nexport function clear(){\n  console.log('clear');\n}\n","import { St } from './state';\n\nexport function revesedDesc(n: St) {\n  return n.desc.split('').reverse().join('');\n}\n","import { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n\n// 当前模块的第一个组件实例挂载完毕时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import state from './state';\nimport * as reducer from './reducer';\nimport * as computed from './computed';\nimport * as lifecycle from './lifecycle';\n\nexport default {\n  state,\n  reducer,\n  computed,\n  lifecycle,\n};\n","\nfunction getInitialState() {\n  return {\n    num: 1,\n    desc: 'this is a demo model!!!!!',\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { run, Plugin } from 'concent';\nimport reduxDevToolPlugin from 'concent-plugin-redux-devtool';\nimport * as msgService from 'services/message';\nimport * as commonUtil from 'utils/common';\nimport * as models from '../models';\n\nconst plugins: Plugin[] = [];\nif (commonUtil.isLocalMode()) {\n  plugins.push(reduxDevToolPlugin);\n}\n\n// load all models by concent.run api\nrun(models, {\n  errorHandler: (err) => {\n    msgService.error(err.message);\n  },\n  plugins,\n  alwaysRenderCaller: true,\n  isStrict: true,\n});\n","import React from 'react';\nimport { LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons';\nimport './style.css';\n\ninterface IProps {\n  style?: Record<string, any>;\n  des?: 'left' | 'right';\n  onClick?: (args?: any[]) => any;\n}\n\nconst stDrawerIcon = { position: 'fixed', top: '48%', zIndex: '999999' };\n\nfunction SiderSwitchIcon({ style = stDrawerIcon, des = 'left', onClick }: IProps) {\n  // 因为icon做了旋转，导致这里需取反方向\n  const uiIcon = des === 'left' ? <RightCircleOutlined /> : <LeftCircleOutlined />;\n  return (\n    <div className=\"ccpro-drawer__icon\" style={style} onClick={() => onClick && onClick()}>\n      <span>\n        {uiIcon}\n      </span>\n    </div>\n  );\n}\n\nexport default SiderSwitchIcon;\n","\nconst cachedAppName = localStorage.getItem('someBaseNameKey') || '';\nconst cachedApiHost = localStorage.getItem('someApiHostKey');\n\n/**\n * 应用可能处于不同的basename下\n */\nexport function getBasename() {\n  return cachedAppName || '';\n}\n\nexport function getApiHost() {\n  // 是本地调试机器，携带者端口号\n  if (window.location.port !== '') return '';\n  return cachedApiHost || '';\n};\n\nexport function attachBasename(url: string) {\n  return `/${getBasename()}${url}`;\n}\n\n/**\n * 通常用于下载链接的拼接\n * @param {*} url\n */\nexport function attachApiHost(url: string) {\n  return `${getApiHost()}${url}`;\n}\n\n/**\n * 去掉basename之后的相对根路径\n * <basename>/xxx/yyy ---> /xxx/yyy\n */\nexport function getRelativeRootPath() {\n  const { pathname } = window.location;\n  const basename = getBasename();\n  let targetPathname = pathname;\n\n  if (basename) {\n    // basename: xxx-app\n    // pathname: /xxx-app/xxx or /xxx-app/xxx\n    // 所以此处 startIdx 取 basename 长度加1\n    const startIdx = basename.length + 1;\n    targetPathname = pathname.substr(startIdx);\n  }\n  if (!targetPathname) targetPathname = '/';\n\n  return targetPathname;\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { history } from 'react-router-concent';\nimport { routerPath } from 'configs/constant';\nimport * as mods from 'configs/c2Mods';\nimport { useC2Mod } from 'services/concent';\nimport { Button } from 'antd';\nimport { NormalBlank } from 'components/dumb/general';\nimport { GeneralTable } from 'components/GeneralTable';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { AsyncButton } from 'components/dumb/general';\n\nfunction Home(props: RouteComponentProps) {\n  const { state } = useC2Mod(mods.COUNTER);\n  return (\n    <div style={{ paddingTop: '150px' }}>\n      <AsyncButton>Welcome to visit concent pro</AsyncButton>\n      <h3>mods.COUNTER.state.value {state.value}</h3>\n      <button onClick={() => history.push(routerPath.SIMPLE_LIST)}>to simple-list page</button>\n      <Button type=\"primary\">查看</Button>\n      <NormalBlank />\n      <Button type=\"dashed\" danger>删除</Button>\n      <NormalBlank />\n      <Button type=\"primary\" icon={<DownloadOutlined />}>下载</Button>\n      <GeneralTable tid=\"1\" size=\"small\" columns={[]} fetchFn={() => Promise.resolve({ pageList: [], total: 10 })} />\n      <GeneralTable tid=\"2\" columns={[]} fetchFn={() => Promise.resolve({ pageList: [], total: 10 })} />\n    </div>\n  );\n}\n\nexport default React.memo(Home);\n","\n/**\n * 应用左侧的导航栏配置\n */\nimport { lazy } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  FormOutlined, OrderedListOutlined, PlusCircleOutlined, RightCircleOutlined,\n} from '@ant-design/icons';\nimport { routerPath } from './constant';\nimport { isLocalMode } from 'utils/common';\nimport HomePage from 'pages/Home';\n// const HomePage = lazy(() => import('pages/Home'));\n\nexport interface IMenuItem {\n  path: string;\n  exact?: boolean;\n  /**\n   * 默认值：true，\n   * 是否在边栏里展示，\n   * 为false时，只是菜单里看不到入口了，通过路由依然能访问\n   */\n  showInSider?: boolean;\n  /**\n   * 菜单对应的页面组件\n   */\n  Component: React.ComponentType<any>;\n  /**\n   * 路由对应的实际组件挂载前执行的逻辑\n   * 如果返回了具体的组件片段，则会替换掉改路由对应的实际组件\n   * 通常的使用场景:\n   * 1 提奖将路由信息写入某个store，子组件渲染时能够及时拿到\n   * 2 判断某些条件，不成立的话，不挂载目标路由组件，替换为该函数返回的视图片段\n   */\n  beforeComponentMount?: (props: RouteComponentProps) => React.ReactNode | void;\n  /**\n   * 默认值：true\n   * 页面组件头部是否出现面包屑，提示用户当前所处的页面路径\n   */\n  showBreadcrumb?: boolean;\n  /**\n   * 默认值：true\n   * 页面组件是否包一层统一的默认布局组件\n   */\n  setContentLayout?: boolean;\n  label: string;\n  Icon?: React.SFC;\n  /** 是否是首页，匹配路径 / 时也能访问，默认 false */\n  isHomePage?: boolean;\n}\n\nexport interface IMenuGroup {\n  /** 用于辅助计算 menu是否展开 */\n  key: string;\n  label: string;\n  Icon?: React.SFC;\n  children: IMenuItem[];\n}\n\nconst showUnderLocalMode = isLocalMode();\n\nconst menus: Array<IMenuItem | IMenuGroup> = [\n  {\n    Icon: FormOutlined,\n    label: '首页',\n    path: routerPath.DEMO,\n    Component: HomePage,\n    isHomePage: true,\n  },\n  {\n    key: 'listExamples',\n    label: 'list示例集合',\n    Icon: OrderedListOutlined,\n    children: [\n      {\n        Icon: FormOutlined,\n        label: '简单列表',\n        path: routerPath.SIMPLE_LIST,\n        Component: lazy(() => import('pages/TodoList')),\n      },\n      {\n        showInSider: showUnderLocalMode,\n        label: 'todoList',\n        path: '/todolist',\n        Component: lazy(() => import('pages/TodoList')),\n      },\n    ]\n  },\n  {\n    label: 'template',\n    path: '/template',\n    Component: lazy(() => import('pages/_Demos/Template')),\n  },\n  {\n    label: '计数器',\n    path: '/counter',\n    Icon: PlusCircleOutlined,\n    Component: lazy(() => import('pages/Counter')),\n  },\n  {\n    label: '分步表单',\n    path: '/step-form',\n    Component: lazy(() => import('pages/AStepForm')),\n  },\n  {\n    Icon: RightCircleOutlined,\n    label: 'useSetup',\n    path: routerPath.DEMO_USE_SETUP,\n    Component: lazy(() => import('pages/_Demos/SomeComponent/UseSetup')),\n  },\n];\n\nexport default menus;\n","\n/**\n * 由 configs/menus 派生出的数据\n */\nimport menus, { IMenuGroup, IMenuItem } from '../menus';\n\n// 打平菜单为一层的结构\nfunction flatMenus(menus: Array<IMenuItem | IMenuGroup>) {\n  const flatted = [] as IMenuItem[];\n\n  const pushToFlatted = (item: IMenuItem) => {\n    flatted.push(item);\n  };\n\n  menus.forEach((item) => {\n    const groupItem = item as IMenuGroup;\n    if (groupItem.children) {\n      groupItem.children.forEach(pushToFlatted);\n      return;\n    }\n    const menuItem = item as IMenuItem;\n    pushToFlatted(menuItem);\n  });\n\n  return flatted;\n}\n\n// 提前计算好 menus 的相关映射关系，或者其他目标参数，以及填充true默认值(方便其他地方使用时能够拥有正确的默认值)\nfunction calcMenus() {\n  const path2menuItem: Record<string, IMenuItem> = {};\n  const path2menuGroup: Record<string, IMenuGroup> = {};\n  // 保持层级结构的可展现的菜单，翻遍垂直或水平模式下不用判断showInSider条件，直接渲染\n  // 因为水平下判断 showInSider 为false，返回无效节点会导致antd菜单组件报错\n  const showingMenus: Array<IMenuItem | IMenuGroup> = [];\n  const allMenus: Array<IMenuItem | IMenuGroup> = [];\n  let homePageFullPath = '';\n\n  menus.forEach(item => {\n    const groupItem = item as IMenuGroup;\n    if (groupItem.children) {\n      const { children, ...rest } = groupItem;\n      const showingMenuGroup: IMenuGroup = { ...rest, children: [] };\n      const allMenuGroup: IMenuGroup = { ...rest, children: [] };\n\n      children.forEach((childItem) => {\n        const { path, showInSider = true, setContentLayout = true, showBreadcrumb = true, ...rest } = childItem;\n        const fillDefaultValChildItem = { ...rest, path, showInSider, setContentLayout, showBreadcrumb };\n        allMenuGroup.children.push(fillDefaultValChildItem);\n\n        path2menuGroup[path] = allMenuGroup;\n        path2menuItem[path] = fillDefaultValChildItem;\n        if (childItem.isHomePage) {\n          homePageFullPath = path;\n          path2menuGroup['/'] = groupItem;\n          path2menuItem['/'] = fillDefaultValChildItem;\n        }\n        if (showInSider) {\n          showingMenuGroup.children.push(fillDefaultValChildItem);\n        }\n      });\n      showingMenus.push(showingMenuGroup);\n      allMenus.push(allMenuGroup);\n      return;\n    }\n\n    const menuItem = item as IMenuItem;\n    const { path, isHomePage, showInSider = true, setContentLayout = true, showBreadcrumb = true, ...rest } = menuItem;\n    const fillDefaultValMenuItem = { ...rest, path, isHomePage, showInSider, setContentLayout, showBreadcrumb };\n    allMenus.push(fillDefaultValMenuItem);\n    path2menuItem[path] = fillDefaultValMenuItem;\n    if (isHomePage) {\n      path2menuItem['/'] = fillDefaultValMenuItem;\n      homePageFullPath = path;\n    }\n    if (showInSider) {\n      showingMenus.push(fillDefaultValMenuItem);\n    }\n  });\n  return { path2menuGroup, path2menuItem, homePageFullPath, showingMenus, allMenus };\n}\n\nconst ret = calcMenus();\n\nexport const { path2menuGroup } = ret;\n\nexport const { path2menuItem } = ret;\n\nexport const { homePageFullPath } = ret;\n\n/** 辅助Sider组件，构造带层级关系的可展示菜单视图，注(指向的item数据也已经正确了填充了true默认值) */\nexport const { showingMenus } = ret;\n\n/** 所有的菜单，已正确填充了默认布尔值true的各个数据节点 */\nexport const { allMenus } = ret;\n\n/** 打平后的菜单，方便构造路由组件 */\nexport const flattedMenus = flatMenus(allMenus);\n","import React from 'react';\n\nfunction App() {\n  return (\n    <h1> not found</h1>\n  );\n}\n\nexport default React.memo(App);\n","/**\n * 根据 configs/menus 配置组装整个应用的路由系统\n */\nimport React, { Suspense } from 'react';\nimport { Switch, Route, RouteComponentProps } from 'react-router-dom';\nimport { register, cst } from 'concent';\nimport { getUrlChangedEvName } from 'react-router-concent';\nimport { Layout, Breadcrumb } from 'antd';\nimport { getRelativeRootPath } from 'services/appPath';\nimport { path2menuItem, path2menuGroup, flattedMenus } from 'configs/derived/menus';\nimport { IMenuItem, IMenuGroup } from 'configs/menus';\nimport { NormalBlank } from 'components/dumb/general';\nimport NotFound from 'pages/NotFound';\nimport { CtxDe } from 'types/store';\nimport styles from './App.module.css';\n\nconst { Content } = Layout;\n\nconst Fallback = () => {\n  return <div>Loading...</div>;\n};\n\nclass Routes extends React.Component {\n  ctx = {} as CtxDe;\n  errOccurred = false;\n\n  state: { err: string, curMenus: Array<IMenuGroup | IMenuItem> } = {\n    err: '',\n    curMenus: [],\n  };\n\n  // 构建一次后就缓存路由组件，否则会在边栏收起时造成页面组件卸载并再挂载\n  cachedUi: Record<string, any> = { uiRoutes: null, uiHomeRoute: null, uiNotFound: null };\n\n  $$setup() {\n    this.ctx.effect(() => {\n      this.changeNavData();\n    }, []);\n\n    this.ctx.on(getUrlChangedEvName(), (param, action, history) => {\n      console.log(param, action, history);\n      if (this.errOccurred) {\n        this.errOccurred = false;\n        this.setState({ err: '' });\n      }\n      this.changeNavData();\n    });\n  }\n\n  // 修改为当前页面头部对应的导航提示路径\n  changeNavData = () => {\n    const curAppPath = getRelativeRootPath();\n    const menuItem = path2menuItem[curAppPath];\n    if (menuItem) {\n      const curMenus = [];\n      curMenus.unshift(menuItem);\n      const menuGroup = path2menuGroup[curAppPath];\n      if (menuGroup) {\n        curMenus.unshift(menuGroup);\n      }\n      this.setState({ curMenus });\n    }\n  }\n\n  componentDidCatch(err: any) {\n    this.errOccurred = true;\n    this.setState({ err: err.message });\n  }\n\n  // 提示当前路由页崩溃\n  renderCrashTip = () => {\n    return (\n      <Layout style={this.ctx.globalComputed.contentLayoutStyle}>\n        <h1 style={{ color: 'red', padding: '64px' }}>\n          当前路由页面崩溃，请联系 xxx开发者 做进一步跟踪，如果是开发者，可打开console查看具体错误,\n          如想继续访问当前页面，可刷新浏览器重试。\n        </h1>\n      </Layout>\n    );\n  }\n\n  // 渲染导航面包屑\n  renderNavBreadcrumb = () => {\n    return (\n      <Breadcrumb style={{ paddingLeft: '16px', height: '32px', lineHeight: '32px', backgroundColor: 'white' }}>\n        {this.state.curMenus.map((item, i) => {\n          const uiIcon = item.Icon ? <item.Icon /> : '';\n          return <Breadcrumb.Item key={i}>{uiIcon}<NormalBlank />{item.label}</Breadcrumb.Item>;\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  // 创建一个渲染包含有【布局信息】和【路由组件】的组件\n  makeCompWrap = (item: IMenuItem) => {\n    return (props: RouteComponentProps) => {\n      const { showBreadcrumb, setContentLayout } = item;\n      let uiBreadcrumb: React.ReactNode = '';\n      if (showBreadcrumb) uiBreadcrumb = this.renderNavBreadcrumb();\n      const { contentLayoutStyle } = this.ctx.globalComputed;\n\n      // beforeComponentMount 可能返回一个替换的视图\n      let uiReplaceRouteComp: React.ReactNode | void = '';\n      const executed = React.useRef(false);\n      if (!executed.current) {\n        executed.current = true;\n        if (item.beforeComponentMount) {\n          uiReplaceRouteComp = item.beforeComponentMount(props);\n        }\n      }\n      const uiTargetComp = uiReplaceRouteComp || <item.Component {...props} />;\n\n      if (setContentLayout) {\n        return (\n          <Layout style={contentLayoutStyle}>\n            {uiBreadcrumb}\n            <Layout style={{ padding: '24px' }}>\n              <Content className={styles.contentWrap}>\n                {uiTargetComp}\n              </Content>\n            </Layout>\n          </Layout>\n        );\n      }\n\n      return (\n        <Layout style={contentLayoutStyle}>\n          {uiBreadcrumb}\n          {uiTargetComp}\n        </Layout>\n      );\n    };\n  }\n\n  // 根据配置构造路由\n  buildRouteUi = () => {\n    if (this.cachedUi.uiRoutes) return this.cachedUi;\n\n    let homeMenuItem: IMenuItem | null = null;\n    const uiRoutes = flattedMenus.map((item) => {\n      if (item.isHomePage) homeMenuItem = item;\n      const CompWrap = this.makeCompWrap(item);\n      return <Route key={item.path} exact={item.exact} path={item.path} component={CompWrap} />;\n    });\n\n    let uiHomeRoute: React.ReactNode = '';\n    if (homeMenuItem) {\n      const CompWrap = this.makeCompWrap(homeMenuItem);\n      uiHomeRoute = <Route exact={true} path={'/'} component={CompWrap} />;\n    }\n\n    const CompNotFoundWrap = this.makeCompWrap({ Component: NotFound, path: '', label: '' });\n    const uiNotFoundRoute = <Route component={CompNotFoundWrap} />;\n\n    this.cachedUi = { uiRoutes, uiHomeRoute, uiNotFoundRoute };\n    return this.cachedUi;\n  }\n\n  render() {\n    if (this.errOccurred) {\n      return this.renderCrashTip();\n    }\n    const { uiRoutes, uiHomeRoute, uiNotFoundRoute } = this.buildRouteUi();\n    return (\n      <Suspense fallback={<Fallback />}>\n        <Switch>\n          {uiRoutes}\n          {uiHomeRoute}\n          {uiNotFoundRoute}\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n\nexport default register(cst.MODULE_DEFAULT)(Routes);\n","import React from 'react'\nimport { sys } from 'configs/constant';\n\nconst fixedStyle: React.CSSProperties = { width: sys.siderWidth - 60, position: 'fixed', left: '19px', top: '11px' };\nconst normalStyle: React.CSSProperties = { width: sys.siderWidth - 60 };\n\ninterface IProps {\n  fixed?: boolean;\n}\n\nexport default function Logo(props: IProps) {\n  const style = props.fixed ? fixedStyle : normalStyle;\n  return (\n    <img style={style} src={sys.webHeaderImg} alt=\"header_img\"></img>\n  )\n}\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { getUrlChangedEvName } from 'react-router-concent';\nimport { MenuMode, SelectInfo } from 'rc-menu/lib/interface';\nimport { CtxDe } from 'types/store';\nimport { IMenuGroup, IMenuItem } from 'configs/menus';\nimport { path2menuGroup, homePageFullPath, showingMenus } from 'configs/derived/menus';\nimport { sys } from 'configs/constant';\nimport { getRelativeRootPath } from 'services/appPath';\nimport { useSetupCtx, getGlobalState } from 'services/concent';\nimport * as arrUtil from 'utils/arr';\nimport Logo from './dumb/Logo';\nimport './resetMenu.css';\nimport styles from './App.module.css';\n\nconst { Sider } = Layout;\nconst { SubMenu, Item: MenuItem } = Menu;\nconst { siderWidthPx } = sys;\n\nfunction iState() {\n  // 获取路由参数，确定展开的菜单\n  let path = getRelativeRootPath();\n  // 确保home页时左侧菜单能够正确的点亮\n  if (path === '/') path = homePageFullPath;\n\n  let openKeys: string[] = [];\n  // 当边栏可见时，才计算 openKeys\n  if (getGlobalState().siderVisible && path2menuGroup[path]) {\n    openKeys = [path2menuGroup[path].key];\n  }\n\n  return {\n    selectedKeys: [path],\n    openKeys,\n  };\n}\n\nfunction setup(ctx: CtxDe) {\n  const ins = ctx.initState(iState);\n  ctx.on(getUrlChangedEvName(), (params) => {\n    // 来自于api的调用跳转 &&sider 处于可见状态，才重置菜单点亮状态\n    if (params.state?.callByApi && ctx.globalState.siderVisible) {\n      const newState = iState();\n      // 保持原来的菜单展开状态, 同时也让新的能够正确展开\n      newState.openKeys = arrUtil.merge(newState.openKeys, ins.state.openKeys);\n      ctx.setState(newState);\n    }\n  });\n\n  return {\n    insState: ins.state,\n    changeSelectedKeys: ({ selectedKeys }: SelectInfo) => {\n      ins.setState({ selectedKeys: selectedKeys?.map(item => `${item}`) });\n    },\n    openMenus: (openKeys: React.Key[]) => {\n      ins.setState({ openKeys: openKeys?.map(item => `${item}`) });\n    },\n    renderMenuItem: (menuItem: IMenuItem) => {\n      const { Icon, path, label } = menuItem;\n      const uiIcon = Icon ? <Icon /> : '';\n      return <MenuItem key={path}>\n        <Link to={path}>{uiIcon}{label}</Link>\n      </MenuItem>;\n    },\n  };\n}\n\ninterface ISiderMenusProps {\n  mode?: MenuMode;\n  style?: React.CSSProperties;\n}\nexport function SiderMenus(props: ISiderMenusProps) {\n  const { mode = 'inline', style = { height: '100%', borderRight: 0 } } = props;\n  const { settings: se, globalState } = useSetupCtx(setup, { tag: 'Sider' });\n  // 垂直在左侧布局时，才读siderTheme，否则主题色应和 headerTheme 相同\n  const theme = mode === 'inline' ? globalState.siderTheme : globalState.headerTheme;\n\n  return <Menu\n    className=\"layout-sider\"\n    theme={theme}\n    onSelect={se.changeSelectedKeys}\n    onOpenChange={se.openMenus}\n    mode={mode}\n    selectedKeys={se.insState.selectedKeys}\n    openKeys={se.insState.openKeys}\n    style={style}\n  >\n    {showingMenus.map((item) => {\n      const groupItem = item as IMenuGroup;\n      if (groupItem.children) {\n        const uiGroupItemIon = groupItem.Icon ? <groupItem.Icon /> : '';\n        return (\n          <SubMenu key={groupItem.key} className=\"siderSubMenu\" title={\n            <span> {uiGroupItemIon}{groupItem.label} </span>\n          }>\n            {groupItem.children.map(childItem => se.renderMenuItem(childItem))}\n          </SubMenu>\n        );\n      }\n      const menuItem = item as IMenuItem;\n      return se.renderMenuItem(menuItem);\n    })}\n  </Menu>;\n}\n\nfunction AppSider() {\n  const { globalState } = useSetupCtx(setup, { tag: 'Sider' });\n  return (\n    <Sider width={siderWidthPx} className={styles.siderWrap} theme={globalState.siderTheme}>\n      <Logo fixed={true} />\n      <SiderMenus />\n    </Sider>\n  );\n}\n\nexport default React.memo(AppSider);\n","import React from 'react';\n\nconst Footer = () => (\n  <div style={{ textAlign: 'center', padding: '5px' }}>\n    Powered by <a href=\"https://github.com/concentjs/concent\" target=\"blank\">Concent 2021</a>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Layout, Popover, Switch, Tag, Avatar } from 'antd';\nimport { SketchPicker, ColorResult } from 'react-color';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Blank, VerticalBlank } from 'components/dumb/general';\nimport { useSetupCtx, useC2DefaultMod } from 'services/concent';\nimport { CtxDe } from 'types/store';\nimport Logo from './dumb/Logo';\nimport { SiderMenus } from './Sider';\nimport styles from './App.module.css';\n\nconst stSiderMenus: React.CSSProperties = { boxShadow: 'none', paddingLeft: '12px', maxWidth: '80%', display: 'inline-block' };\n\nexport function setup(ctx: CtxDe) {\n  const { globalReducer: grd } = ctx;\n  return {\n    onWebsiteColorChange(colorResult: ColorResult) {\n      grd.changeThemeColor(colorResult.hex);\n    },\n    onSiderThemeChange(checked: boolean) {\n      grd.switchSiderTheme(checked);\n    },\n    onHeaderThemeChange(checked: boolean) {\n      grd.switchHeaderTheme(checked);\n    },\n    onFixHeaderChange(checked: boolean) {\n      grd.switchFixHeader(checked);\n    },\n    onInnerMockChange(checked: boolean) {\n      grd.changeIsInnerMock(checked);\n    },\n  };\n}\n\nexport function SettingPanel() {\n  const { globalState: gst, globalComputed: gcu, settings: se } = useSetupCtx(setup, { tag: 'SettingPanel' });\n\n  return (\n    <div style={{ padding: '12px 28px' }}>\n      <Tag color=\"geekblue\">站点主题设置：</Tag>\n      <VerticalBlank />\n      <SketchPicker color={gcu.headerStyle.color} onChange={se.onWebsiteColorChange}\n        onChangeComplete={se.onWebsiteColorChange}\n      />\n      <VerticalBlank />\n      <div>\n        <Tag color=\"geekblue\">暗黑边栏：</Tag>\n        <Blank />\n        <Switch checkedChildren=\"关闭\" unCheckedChildren=\"开启\" checked={gcu.siderThemeSwitchChecked}\n          onChange={se.onSiderThemeChange}\n        />\n      </div>\n      <VerticalBlank />\n      <div>\n        <Tag color=\"geekblue\">暗黑顶栏：</Tag>\n        <Blank />\n        <Switch checkedChildren=\"关闭\" unCheckedChildren=\"开启\" checked={gcu.headerThemeSwitchChecked}\n          onChange={se.onHeaderThemeChange}\n        />\n      </div>\n      <VerticalBlank />\n      <div>\n        <Tag color=\"geekblue\">固定顶栏：</Tag>\n        <Blank />\n        <Switch checkedChildren=\"关闭\" unCheckedChildren=\"开启\" checked={gst.fixHeader}\n          onChange={se.onFixHeaderChange}\n        />\n      </div>\n      <VerticalBlank />\n      <div>\n        <Tag color=\"geekblue\">innerMock设置：</Tag>\n        <Blank />\n        <Switch checkedChildren=\"关闭\" unCheckedChildren=\"开启\" checked={gst.isInnerMock}\n          onChange={se.onInnerMockChange}\n        />\n      </div>\n    </div>\n  );\n}\n\n\n\nfunction AppHeader() {\n  const { globalState: gst, globalComputed: gcu } = useC2DefaultMod();\n\n  return (\n    <Layout.Header className={styles.header} style={gcu.headerStyle}>\n      { !gst.siderVisible && <Logo />}\n      { !gst.siderVisible && <SiderMenus mode=\"horizontal\" style={stSiderMenus} />}\n      <div className={styles.userIconWrap}>\n        <Avatar size={32} src={gst.userIcon} />\n        <Blank width=\"8px\" />\n        {gst.userName}\n      </div>\n      <Popover placement=\"bottomLeft\" content={<SettingPanel />} title=\"主题设置\" trigger=\"click\">\n        <SettingOutlined className={styles.headerSetting} style={{ color: gcu.headerStyle.color }} />\n      </Popover>\n    </Layout.Header>\n  );\n}\n\nexport default React.memo(AppHeader);\n","// +++ node modules +++\nimport React from 'react';\nimport { ConnectRouter } from 'react-router-concent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Layout, Spin, Skeleton } from 'antd';\nimport { cst } from 'concent';\n// +++ project modules +++\nimport { CtxDe } from 'types/store';\nimport SiderSwitchIcon from 'components/dumb/SiderSwitchIcon';\nimport { getBasename } from 'services/appPath';\nimport { useC2Mod } from 'services/concent';\n// +++ local modules +++\nimport Routes from './Routes';\nimport Sider from './Sider';\nimport Footer from './Footer';\nimport Header from './Header';\n\nfunction setup({ effect, globalReducer, globalState, globalComputed }: CtxDe) {\n  effect(() => {\n    globalReducer.prepareApp();\n  }, []);\n\n  return {\n    renderContentArea() {\n      const { contentLayoutStyle } = globalComputed;\n      let uiContentArea = '' as React.ReactNode;\n      if (!globalState.isAppReady) {\n        uiContentArea = <Layout style={{ ...contentLayoutStyle, padding: '64px' }}>\n          <Skeleton avatar paragraph={{ rows: 4 }} />\n          <Skeleton avatar paragraph={{ rows: 4 }} />\n          <Spin>\n            <div style={{ textAlign: 'center' }}>系统初始化中...</div>\n          </Spin>\n        </Layout>;\n      } else {\n        // 给一个最小高度，确保路由组件在异步加载过程中，Footer出现在底部\n        uiContentArea = <div style={{ minHeight: 'calc(100vh - 120px)' }}><Routes /></div>;\n      }\n      return uiContentArea;\n    }\n  };\n}\n\nfunction App() {\n  const { globalReducer, globalState, globalComputed, settings } = useC2Mod(cst.MODULE_DEFAULT, { setup, tag: 'App' });\n  return (\n    <Layout>\n      <Layout>\n        <Header />\n      </Layout>\n      <Layout>\n        <SiderSwitchIcon des={globalComputed.siderIconDes} onClick={globalReducer.toggleSiderVisible} />\n        {globalState.siderVisible && <Sider />}\n      </Layout>\n      {settings.renderContentArea()}\n      <Footer />\n    </Layout>\n  );\n}\n\nexport default React.memo(() => {\n  return (\n    <BrowserRouter basename={`/${getBasename()}`}>\n      <ConnectRouter callUrlChangedOnInit={true}>\n        <App />\n      </ConnectRouter>\n    </BrowserRouter>\n  );\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\nimport 'configs/runConcent';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/antd.css';\nimport App from 'layout';\nimport * as serviceWorker from './serviceWorker';\n\nfunction getHostNode(id = 'root') {\n  let node = document.getElementById(id);\n  if (!node) {\n    node = document.createElement('div');\n    node.id = id;\n    document.body.appendChild(node);\n  }\n  return node;\n}\n\nReactDOM.render(<App />, getHostNode('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nexport function okeys<T extends Record<string, any>>(map: T) {\n  // 外部需要自己 as (keyof T)[]\n  return Object.keys(map);\n}\n\nexport function isValidVal(val: any) {\n  return val !== undefined && val !== null && val !== '';\n}\n\n/**\n * 判断是否是对象 {} []\n * @param {*} val\n */\nexport function isObject(val: any, allowArr = true) {\n  // 防止 typeof null === 'object' 成立\n  if (!val) return false;\n  if (allowArr) {\n    return typeof val === 'object';\n  }\n  return typeof val === 'object' && !Array.isArray(val);\n}\n\nexport function clone<T extends Record<string, any>>(obj: T): T {\n  if (obj) return JSON.parse(JSON.stringify(obj));\n\n  throw new Error('empty object');\n}\n\nexport function safeGetItemFromArray<T = any>(arr: T[], idx: number, defaultValue: T) {\n  let item = arr[idx];\n  if (!item) {\n    item = arr[idx] = defaultValue;\n  }\n  return item;\n}\n\nexport function safeGet<T = any>(obj: Record<string, any>, key: string, defaultValue: T) {\n  let item = obj[key];\n  if (!item) {\n    item = obj[key] = defaultValue;\n  }\n  return item;\n}\n\nexport function safeAssign(obj: Record<string, any>, toMod: Record<string, any> = {}) {\n  Object.keys(toMod).forEach((key) => {\n    obj[key] = toMod[key];\n  });\n  return obj;\n}\n\n/**\n * 指定了 defaultValue 时才不会抛出解析字符串失败的错误\n * @param jsonStr\n * @param defaultValue\n */\nexport function safeParse<T = any>(jsonStr: string, defaultValue?: T, errMsg?: string): T {\n  try {\n    return JSON.parse(jsonStr);\n  } catch (err) {\n    if (defaultValue) return defaultValue;\n    if (errMsg) throw new Error(errMsg);\n    throw err;\n  }\n}\n\ninterface NullDef {\n  nullValues?: any[];\n  /** {} 算不算空，true算空*/\n  emptyObjIsNull?: boolean;\n  /** 需不需要检查 {a:'', b:'' }, 默认false, 为true时，如果传入的是object，检查所有value算不算空 */\n  checkObjValues?: boolean;\n  emptyArrIsNull?: boolean;\n}\n/**\n *\n * @param value\n * @param nullDef\n */\nexport function isNull(value: any, nullDef: NullDef = {}) {\n  const {\n    nullValues = [null, undefined, ''], checkObjValues = false,\n    emptyObjIsNull = true, emptyArrIsNull = true,\n  } = nullDef;\n\n  const inNullValues = nullValues.includes(value);\n  if (inNullValues) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    if (emptyArrIsNull) return value.length === 0;\n    return false;\n  }\n\n  if (typeof value === 'object') {\n    const keys = okeys(value);\n    const keyLen = keys.length;\n\n    // {a:'', b:'' } 所有子value为空才算空\n    if (checkObjValues) {\n      let allIsNull = true;\n      for (let i = 0; i < keyLen; i++) {\n        const subValue = value[keys[i]];\n        if (!isNull(subValue)) {\n          allIsNull = false;\n          break;\n        }\n      }\n\n      return allIsNull;\n    }\n    if (emptyObjIsNull) return keyLen === 0;\n    return false;\n  }\n\n  return false;\n}\n\nexport function reverseMap(originalMap: Record<string, string | number>) {\n  return Object.keys(originalMap).reduce((map, key) => {\n    const value = originalMap[key];\n    map[value] = key;\n    return map;\n  }, {} as Record<string, string>);\n}\n\n/**\n * 后端有些接口返回空map的格式是数组 [],\n * 但其实期望的是 {},\n * 为了保证上传业务逻辑消费数据的格式一致性，使用此函数做修正\n */\nexport function ensureMap(obj: Record<string, any>, key: string) {\n  if (Array.isArray(obj[key])) {\n    obj[key] = {};\n  }\n}\n\n/**\n * 从一个已存在的map里按规则变异出一个新的map\n * @param map\n * @param getValue\n * @param getKey\n */\nexport function transformMap(map: Record<string, any>, getValue?: (value: any, key: string) => any, getKey?: (key: string, value: any) => string) {\n  const newMap = {} as Record<string, any>;\n  const targetGetKey = getKey || (key => key);\n\n  okeys(map).forEach(key => {\n    const value = map[key];\n    const mapKey = targetGetKey(key, value);\n    newMap[mapKey] = getValue ? getValue(value, key) : value;\n  });\n  return newMap;\n}\n\n/**\n * map 转为 list\n * @param map\n * @param keyName\n * @param valueName\n */\nexport function toList<V, Item>(map: Record<string, V>, getItem: (key: string, value: V) => Item) {\n  const list = [] as Item[];\n  okeys(map).forEach(key => {\n    const item = getItem(key, map[key]);\n    list.push(item);\n  });\n  return list;\n}\n\n/**\n * 过滤list，按规则组装新的item后返回一个新的 list\n * @param list\n * @param filterCb\n * @param getNewItem\n */\nexport function filterList<Item, NewItem>(list: Item[], filterCb: (item: Item) => boolean, getNewItem: (item: Item) => NewItem) {\n  const newList = [] as NewItem[];\n  list.forEach(item => {\n    if (filterCb(item)) newList.push(getNewItem(item));\n  });\n  return newList;\n}\n\n/**\n  * 对比新老对象，提取出新对象里发生变化的部分并单独返回\n  * 注意此函数只做浅比较\n  * @param {object} oldObj\n  * @param {object} newObj\n  * @param {string} [fixedKeys=[]] - 必定要包含的key\n  */\nexport function extractChangedPart(oldObj: Record<string, any>, newObj: Record<string, any>, fixedKeys: string[] = []) {\n  const changed = {} as Record<string, any>;\n  const oldObjKeys = okeys(oldObj);\n  const newObjKeys = okeys(newObj);\n  const traversalKeys = newObjKeys.length > oldObjKeys.length ? newObjKeys : oldObjKeys;\n\n  traversalKeys.forEach(key => {\n    const newVal = newObj[key];\n    if (fixedKeys.includes(key)) {\n      changed[key] = newVal;\n      return;\n    }\n    if (newVal === undefined) return;\n    if (oldObj[key] !== newVal) changed[key] = newVal;\n  });\n  return changed;\n}\n\nexport function hasProperty(obj: Record<string, any>, property: string) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\n\nexport function purify(obj: Record<string, any>, isValueInvalid?: (val: any) => boolean): Record<string, any> {\n  // isValidVal or isNull\n  const targetIsInvalid = isValueInvalid || (value => !isNull(value));\n  const pureObj = {} as Record<string, any>;\n  okeys(obj).forEach(key => {\n    if (targetIsInvalid(obj[key])) pureObj[key] = obj[key];\n  });\n  return pureObj;\n}\n\n/**\n * 针对string 或则 number 元素的数组做不重复添加\n * @param arr\n * @param item\n */\nexport function noDupPush(arr: (string | number)[], item: string | number) {\n  if (!arr.includes(item)) arr.push(item);\n}\n\nexport function getVal(obj: Record<string, any>, key: string) {\n  return obj[key];\n}\n\n\nexport function getDepth(obj: Record<string, any>) {\n  let depth = 0;\n  if (obj.children) {\n    obj.children.forEach((d: any) => {\n      const tmpDepth = getDepth(d);\n      if (tmpDepth > depth) {\n        depth = tmpDepth;\n      }\n    });\n  }\n  return 1 + depth;\n}\n\nexport function getObjDepth(obj: Record<string, any>) {\n  type DepthRecorder = { num: number };\n\n  const tryDetectObjDepth = (obj: Record<string, any>, curDepth: number, depthRecorder: DepthRecorder) => {\n    const keys = okeys(obj);\n    const newDepth = curDepth + 1;\n    for (let i = 0; i < keys.length; i++) {\n      const val = obj[keys[i]];\n      if (isObject(val)) {\n        if (depthRecorder.num < newDepth) depthRecorder.num = newDepth;\n        tryDetectObjDepth(val, newDepth, depthRecorder);\n      }\n    }\n  };\n\n  const depthRecorder: DepthRecorder = { num: 1 };\n  tryDetectObjDepth(obj, 1, depthRecorder);\n  return depthRecorder.num;\n}\n\nexport function isDepthLargeThan(obj: Record<string, any>, toCompare: number) {\n  const depth = getObjDepth(obj);\n  return depth > toCompare;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2kcNX\",\"headerSetting\":\"App_headerSetting__1E4Mp\",\"userIconWrap\":\"App_userIconWrap__45YNy\",\"siderWrap\":\"App_siderWrap__1NZ2z\",\"contentWrap\":\"App_contentWrap__18bUp\"};"],"sourceRoot":""}