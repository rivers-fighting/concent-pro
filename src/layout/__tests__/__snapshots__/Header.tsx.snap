// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Render generate Header snapshot 1`] = `
<Memo(AppHeader)>
  <Header
    className="header"
    style={
      Object {
        "backgroundColor": "#001529",
        "color": "white",
        "marginLeft": "200px",
      }
    }
  >
    <Basic
      className="header"
      prefixCls="ant-layout-header"
      style={
        Object {
          "backgroundColor": "#001529",
          "color": "white",
          "marginLeft": "200px",
        }
      }
      tagName="header"
    >
      <header
        className="ant-layout-header header"
        style={
          Object {
            "backgroundColor": "#001529",
            "color": "white",
            "marginLeft": "200px",
          }
        }
      >
        <div
          className="userIconWrap"
        >
          <Avatar
            shape="circle"
            size={32}
            src=""
          >
            <span
              className="ant-avatar ant-avatar-circle"
              style={
                Object {
                  "fontSize": 18,
                  "height": 32,
                  "lineHeight": "32px",
                  "width": 32,
                }
              }
            >
              <img
                onError={[Function]}
                src=""
              />
            </span>
          </Avatar>
          <Blank
            width="8px"
          >
            <div
              style={
                Object {
                  "display": "inline-block",
                  "height": "16px",
                  "width": "8px",
                }
              }
            />
          </Blank>
        </div>
        <Popover
          content={<SettingPanel />}
          mouseEnterDelay={0.1}
          mouseLeaveDelay={0.1}
          overlayStyle={Object {}}
          placement="bottomLeft"
          title="主题设置"
          transitionName="zoom-big"
          trigger="click"
        >
          <Tooltip
            arrowPointAtCenter={false}
            autoAdjustOverflow={true}
            mouseEnterDelay={0.1}
            mouseLeaveDelay={0.1}
            overlay={
              <React.Fragment>
                <div
                  className="ant-popover-title"
                >
                  主题设置
                </div>
                <div
                  className="ant-popover-inner-content"
                >
                  <SettingPanel />
                </div>
              </React.Fragment>
            }
            overlayStyle={Object {}}
            placement="bottomLeft"
            prefixCls="ant-popover"
            transitionName="zoom-big"
            trigger="click"
          >
            <ForwardRef(Tooltip)
              arrowContent={
                <span
                  className="ant-popover-arrow-content"
                />
              }
              arrowPointAtCenter={false}
              autoAdjustOverflow={true}
              builtinPlacements={
                Object {
                  "bottom": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tc",
                      "bc",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "bottomLeft": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "bottomRight": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "left": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      -4,
                      0,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "cr",
                      "cl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "leftBottom": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      -4,
                      0,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "bl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "leftTop": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      -4,
                      0,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "tl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "right": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      4,
                      0,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "cl",
                      "cr",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "rightBottom": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      4,
                      0,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "br",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "rightTop": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      4,
                      0,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "tr",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "top": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bc",
                      "tc",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topLeft": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topRight": Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                }
              }
              mouseEnterDelay={0.1}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onVisibleChange={[Function]}
              overlay={
                <React.Fragment>
                  <div
                    className="ant-popover-title"
                  >
                    主题设置
                  </div>
                  <div
                    className="ant-popover-inner-content"
                  >
                    <SettingPanel />
                  </div>
                </React.Fragment>
              }
              overlayClassName=""
              overlayStyle={Object {}}
              placement="bottomLeft"
              prefixCls="ant-popover"
              transitionName="zoom-big"
              trigger="click"
              visible={false}
            >
              <Trigger
                action="click"
                afterPopupVisibleChange={[Function]}
                arrowContent={
                  <span
                    className="ant-popover-arrow-content"
                  />
                }
                arrowPointAtCenter={false}
                autoAdjustOverflow={true}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottom": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tc",
                        "bc",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "bottomLeft": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "bottomRight": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "left": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        -4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "cr",
                        "cl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "leftBottom": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        -4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "bl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "leftTop": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        -4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "tl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "right": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "cl",
                        "cr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "rightBottom": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "br",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "rightTop": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "tr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "top": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bc",
                        "tc",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topLeft": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topRight": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0.1}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                overlay={
                  <React.Fragment>
                    <div
                      className="ant-popover-title"
                    >
                      主题设置
                    </div>
                    <div
                      className="ant-popover-inner-content"
                    >
                      <SettingPanel />
                    </div>
                  </React.Fragment>
                }
                popup={[Function]}
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={Object {}}
                popupTransitionName="zoom-big"
                popupVisible={false}
                prefixCls="ant-popover"
                showAction={Array []}
                visible={false}
              >
                <ForwardRef(SettingOutlined)
                  className="headerSetting"
                  key="trigger"
                  onClick={[Function]}
                  onMouseDown={[Function]}
                  onTouchStart={[Function]}
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  <AntdIcon
                    className="headerSetting"
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "setting",
                        "theme": "outlined",
                      }
                    }
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  >
                    <span
                      aria-label="setting"
                      className="anticon anticon-setting headerSetting"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      role="img"
                      style={
                        Object {
                          "color": "white",
                        }
                      }
                      tabIndex={-1}
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "setting",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="setting"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-setting"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z"
                            key="svg-setting-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(SettingOutlined)>
              </Trigger>
            </ForwardRef(Tooltip)>
          </Tooltip>
        </Popover>
      </header>
    </Basic>
  </Header>
</Memo(AppHeader)>
`;

exports[`Header Render generate SettingPanel snapshot 1`] = `
<SettingPanel>
  <div
    style={
      Object {
        "padding": "12px 28px",
      }
    }
  >
    <Tag
      color="geekblue"
    >
      <span
        className="ant-tag ant-tag-geekblue"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
      >
        站点主题设置：
      </span>
    </Tag>
    <VerticalBlank>
      <Blank
        type="vertical"
      >
        <div
          style={
            Object {
              "display": "block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
    </VerticalBlank>
    <ColorPicker
      color="white"
      disableAlpha={false}
      onChange={[Function]}
      onChangeComplete={[Function]}
      presetColors={
        Array [
          "#D0021B",
          "#F5A623",
          "#F8E71C",
          "#8B572A",
          "#7ED321",
          "#417505",
          "#BD10E0",
          "#9013FE",
          "#4A90E2",
          "#50E3C2",
          "#B8E986",
          "#000000",
          "#4A4A4A",
          "#9B9B9B",
          "#FFFFFF",
        ]
      }
      styles={Object {}}
      width={200}
    >
      <Sketch
        color="white"
        disableAlpha={false}
        hex="#ffffff"
        hsl={
          Object {
            "a": 1,
            "h": 0,
            "l": 1,
            "s": 0,
          }
        }
        hsv={
          Object {
            "a": 1,
            "h": 0,
            "s": 0,
            "v": 1,
          }
        }
        oldHue={0}
        onChange={[Function]}
        onChangeComplete={[Function]}
        presetColors={
          Array [
            "#D0021B",
            "#F5A623",
            "#F8E71C",
            "#8B572A",
            "#7ED321",
            "#417505",
            "#BD10E0",
            "#9013FE",
            "#4A90E2",
            "#50E3C2",
            "#B8E986",
            "#000000",
            "#4A4A4A",
            "#9B9B9B",
            "#FFFFFF",
          ]
        }
        rgb={
          Object {
            "a": 1,
            "b": 255,
            "g": 255,
            "r": 255,
          }
        }
        styles={Object {}}
        width={200}
      >
        <div
          className="sketch-picker "
          style={
            Object {
              "MozBorderRadius": "4px",
              "MozBoxShadow": "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)",
              "OBorderRadius": "4px",
              "OBoxShadow": "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)",
              "WebkitBorderRadius": "4px",
              "WebkitBoxShadow": "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)",
              "background": "#fff",
              "borderRadius": "4px",
              "boxShadow": "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)",
              "boxSizing": "initial",
              "msBorderRadius": "4px",
              "msBoxShadow": "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)",
              "padding": "10px 10px 0",
              "width": 200,
            }
          }
        >
          <div
            style={
              Object {
                "overflow": "hidden",
                "paddingBottom": "75%",
                "position": "relative",
                "width": "100%",
              }
            }
          >
            <Saturation
              hsl={
                Object {
                  "a": 1,
                  "h": 0,
                  "l": 1,
                  "s": 0,
                }
              }
              hsv={
                Object {
                  "a": 1,
                  "h": 0,
                  "s": 0,
                  "v": 1,
                }
              }
              onChange={[Function]}
              style={
                Object {
                  "radius": "3px",
                  "shadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                }
              }
            >
              <div
                onMouseDown={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "MozBorderRadius": undefined,
                    "OBorderRadius": undefined,
                    "WebkitBorderRadius": undefined,
                    "background": "hsl(0,100%, 50%)",
                    "borderRadius": undefined,
                    "bottom": "0px",
                    "left": "0px",
                    "msBorderRadius": undefined,
                    "position": "absolute",
                    "right": "0px",
                    "top": "0px",
                  }
                }
              >
                <style>
                  
          .saturation-white {
            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));
            background: linear-gradient(to right, #fff, rgba(255,255,255,0));
          }
          .saturation-black {
            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));
            background: linear-gradient(to top, #000, rgba(0,0,0,0));
          }
        
                </style>
                <div
                  className="saturation-white"
                  style={
                    Object {
                      "MozBorderRadius": undefined,
                      "OBorderRadius": undefined,
                      "WebkitBorderRadius": undefined,
                      "borderRadius": undefined,
                      "bottom": "0px",
                      "left": "0px",
                      "msBorderRadius": undefined,
                      "position": "absolute",
                      "right": "0px",
                      "top": "0px",
                    }
                  }
                >
                  <div
                    className="saturation-black"
                    style={
                      Object {
                        "MozBorderRadius": undefined,
                        "MozBoxShadow": undefined,
                        "OBorderRadius": undefined,
                        "OBoxShadow": undefined,
                        "WebkitBorderRadius": undefined,
                        "WebkitBoxShadow": undefined,
                        "borderRadius": undefined,
                        "bottom": "0px",
                        "boxShadow": undefined,
                        "left": "0px",
                        "msBorderRadius": undefined,
                        "msBoxShadow": undefined,
                        "position": "absolute",
                        "right": "0px",
                        "top": "0px",
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "cursor": "default",
                        "left": "0%",
                        "position": "absolute",
                        "top": "0%",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "MozBorderRadius": "50%",
                          "MozBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                          "MozTransform": "translate(-2px, -2px)",
                          "OBorderRadius": "50%",
                          "OBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                          "OTransform": "translate(-2px, -2px)",
                          "WebkitBorderRadius": "50%",
                          "WebkitBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                          "WebkitTransform": "translate(-2px, -2px)",
                          "borderRadius": "50%",
                          "boxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                          "cursor": "hand",
                          "height": "4px",
                          "msBorderRadius": "50%",
                          "msBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                          "msTransform": "translate(-2px, -2px)",
                          "transform": "translate(-2px, -2px)",
                          "width": "4px",
                        }
                      }
                    />
                  </div>
                </div>
              </div>
            </Saturation>
          </div>
          <div
            className="flexbox-fix"
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <div
              style={
                Object {
                  "MozBoxFlex": "1",
                  "WebkitBoxFlex": "1",
                  "WebkitFlex": "1",
                  "flex": "1",
                  "msFlex": "1",
                  "padding": "4px 0",
                }
              }
            >
              <div
                style={
                  Object {
                    "height": "10px",
                    "overflow": "hidden",
                    "position": "relative",
                  }
                }
              >
                <Hue
                  hsl={
                    Object {
                      "a": 1,
                      "h": 0,
                      "l": 1,
                      "s": 0,
                    }
                  }
                  onChange={[Function]}
                  style={
                    Object {
                      "radius": "2px",
                      "shadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": undefined,
                        "MozBoxShadow": undefined,
                        "OBorderRadius": undefined,
                        "OBoxShadow": undefined,
                        "WebkitBorderRadius": undefined,
                        "WebkitBoxShadow": undefined,
                        "borderRadius": undefined,
                        "bottom": "0px",
                        "boxShadow": undefined,
                        "left": "0px",
                        "msBorderRadius": undefined,
                        "msBoxShadow": undefined,
                        "position": "absolute",
                        "right": "0px",
                        "top": "0px",
                      }
                    }
                  >
                    <div
                      className="hue-horizontal"
                      onMouseDown={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": undefined,
                          "OBorderRadius": undefined,
                          "WebkitBorderRadius": undefined,
                          "borderRadius": undefined,
                          "height": "100%",
                          "msBorderRadius": undefined,
                          "padding": "0 2px",
                          "position": "relative",
                        }
                      }
                    >
                      <style>
                        
            .hue-horizontal {
              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0
                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to right, #f00 0%, #ff0
                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }

            .hue-vertical {
              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,
                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,
                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }
          
                      </style>
                      <div
                        style={
                          Object {
                            "left": "0%",
                            "position": "absolute",
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "MozBorderRadius": "1px",
                              "MozBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "MozTransform": "translateX(-2px)",
                              "OBorderRadius": "1px",
                              "OBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "OTransform": "translateX(-2px)",
                              "WebkitBorderRadius": "1px",
                              "WebkitBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "WebkitTransform": "translateX(-2px)",
                              "background": "#fff",
                              "borderRadius": "1px",
                              "boxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "height": "8px",
                              "marginTop": "1px",
                              "msBorderRadius": "1px",
                              "msBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "msTransform": "translateX(-2px)",
                              "transform": "translateX(-2px)",
                              "width": "4px",
                            }
                          }
                        />
                      </div>
                    </div>
                  </div>
                </Hue>
              </div>
              <div
                style={
                  Object {
                    "height": "10px",
                    "marginTop": "4px",
                    "overflow": "hidden",
                    "position": "relative",
                  }
                }
              >
                <Alpha
                  hsl={
                    Object {
                      "a": 1,
                      "h": 0,
                      "l": 1,
                      "s": 0,
                    }
                  }
                  onChange={[Function]}
                  rgb={
                    Object {
                      "a": 1,
                      "b": 255,
                      "g": 255,
                      "r": 255,
                    }
                  }
                  style={
                    Object {
                      "radius": "2px",
                      "shadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": undefined,
                        "OBorderRadius": undefined,
                        "WebkitBorderRadius": undefined,
                        "borderRadius": undefined,
                        "bottom": "0px",
                        "left": "0px",
                        "msBorderRadius": undefined,
                        "position": "absolute",
                        "right": "0px",
                        "top": "0px",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "MozBorderRadius": undefined,
                          "OBorderRadius": undefined,
                          "WebkitBorderRadius": undefined,
                          "borderRadius": undefined,
                          "bottom": "0px",
                          "left": "0px",
                          "msBorderRadius": undefined,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": "0px",
                          "top": "0px",
                        }
                      }
                    >
                      <Checkboard
                        grey="rgba(0,0,0,.08)"
                        renderers={Object {}}
                        size={8}
                        white="transparent"
                      >
                        <div
                          style={
                            Object {
                              "MozBorderRadius": undefined,
                              "MozBoxShadow": undefined,
                              "OBorderRadius": undefined,
                              "OBoxShadow": undefined,
                              "WebkitBorderRadius": undefined,
                              "WebkitBoxShadow": undefined,
                              "background": "url(null) center left",
                              "borderRadius": undefined,
                              "bottom": "0px",
                              "boxShadow": undefined,
                              "left": "0px",
                              "msBorderRadius": undefined,
                              "msBoxShadow": undefined,
                              "position": "absolute",
                              "right": "0px",
                              "top": "0px",
                            }
                          }
                        />
                      </Checkboard>
                    </div>
                    <div
                      style={
                        Object {
                          "MozBorderRadius": undefined,
                          "MozBoxShadow": undefined,
                          "OBorderRadius": undefined,
                          "OBoxShadow": undefined,
                          "WebkitBorderRadius": undefined,
                          "WebkitBoxShadow": undefined,
                          "background": "linear-gradient(to right, rgba(255,255,255, 0) 0%,
           rgba(255,255,255, 1) 100%)",
                          "borderRadius": undefined,
                          "bottom": "0px",
                          "boxShadow": undefined,
                          "left": "0px",
                          "msBorderRadius": undefined,
                          "msBoxShadow": undefined,
                          "position": "absolute",
                          "right": "0px",
                          "top": "0px",
                        }
                      }
                    />
                    <div
                      onMouseDown={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "height": "100%",
                          "margin": "0 3px",
                          "position": "relative",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "left": "100%",
                            "position": "absolute",
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "MozBorderRadius": "1px",
                              "MozBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "MozTransform": "translateX(-2px)",
                              "OBorderRadius": "1px",
                              "OBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "OTransform": "translateX(-2px)",
                              "WebkitBorderRadius": "1px",
                              "WebkitBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "WebkitTransform": "translateX(-2px)",
                              "background": "#fff",
                              "borderRadius": "1px",
                              "boxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "height": "8px",
                              "marginTop": "1px",
                              "msBorderRadius": "1px",
                              "msBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                              "msTransform": "translateX(-2px)",
                              "transform": "translateX(-2px)",
                              "width": "4px",
                            }
                          }
                        />
                      </div>
                    </div>
                  </div>
                </Alpha>
              </div>
            </div>
            <div
              style={
                Object {
                  "MozBorderRadius": "3px",
                  "OBorderRadius": "3px",
                  "WebkitBorderRadius": "3px",
                  "borderRadius": "3px",
                  "height": "24px",
                  "marginLeft": "4px",
                  "marginTop": "4px",
                  "msBorderRadius": "3px",
                  "position": "relative",
                  "width": "24px",
                }
              }
            >
              <Checkboard
                grey="rgba(0,0,0,.08)"
                renderers={Object {}}
                size={8}
                white="transparent"
              >
                <div
                  style={
                    Object {
                      "MozBorderRadius": undefined,
                      "MozBoxShadow": undefined,
                      "OBorderRadius": undefined,
                      "OBoxShadow": undefined,
                      "WebkitBorderRadius": undefined,
                      "WebkitBoxShadow": undefined,
                      "background": "url(null) center left",
                      "borderRadius": undefined,
                      "bottom": "0px",
                      "boxShadow": undefined,
                      "left": "0px",
                      "msBorderRadius": undefined,
                      "msBoxShadow": undefined,
                      "position": "absolute",
                      "right": "0px",
                      "top": "0px",
                    }
                  }
                />
              </Checkboard>
              <div
                style={
                  Object {
                    "MozBorderRadius": "2px",
                    "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    "OBorderRadius": "2px",
                    "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    "WebkitBorderRadius": "2px",
                    "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    "background": "rgba(255,255,255,1)",
                    "borderRadius": "2px",
                    "bottom": "0px",
                    "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    "left": "0px",
                    "msBorderRadius": "2px",
                    "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)",
                    "position": "absolute",
                    "right": "0px",
                    "top": "0px",
                  }
                }
              />
            </div>
          </div>
          <SketchFields
            disableAlpha={false}
            hex="#ffffff"
            hsl={
              Object {
                "a": 1,
                "h": 0,
                "l": 1,
                "s": 0,
              }
            }
            onChange={[Function]}
            rgb={
              Object {
                "a": 1,
                "b": 255,
                "g": 255,
                "r": 255,
              }
            }
          >
            <div
              className="flexbox-fix"
              style={
                Object {
                  "display": "flex",
                  "paddingTop": "4px",
                }
              }
            >
              <div
                style={
                  Object {
                    "MozBoxFlex": "2",
                    "WebkitBoxFlex": "2",
                    "WebkitFlex": "2",
                    "flex": "2",
                    "msFlex": "2",
                  }
                }
              >
                <EditableInput
                  label="hex"
                  onChange={[Function]}
                  style={
                    Object {
                      "input": Object {
                        "MozBoxShadow": "inset 0 0 0 1px #ccc",
                        "OBoxShadow": "inset 0 0 0 1px #ccc",
                        "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                        "border": "none",
                        "boxShadow": "inset 0 0 0 1px #ccc",
                        "fontSize": "11px",
                        "msBoxShadow": "inset 0 0 0 1px #ccc",
                        "padding": "4px 10% 3px",
                        "width": "80%",
                      },
                      "label": Object {
                        "color": "#222",
                        "display": "block",
                        "fontSize": "11px",
                        "paddingBottom": "4px",
                        "paddingTop": "3px",
                        "textAlign": "center",
                        "textTransform": "capitalize",
                      },
                    }
                  }
                  value="ffffff"
                >
                  <div
                    style={
                      Object {
                        "position": "relative",
                      }
                    }
                  >
                    <input
                      id="rc-editable-input-1"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      spellCheck="false"
                      style={
                        Object {
                          "MozBoxShadow": "inset 0 0 0 1px #ccc",
                          "OBoxShadow": "inset 0 0 0 1px #ccc",
                          "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                          "border": "none",
                          "boxShadow": "inset 0 0 0 1px #ccc",
                          "fontSize": "11px",
                          "msBoxShadow": "inset 0 0 0 1px #ccc",
                          "padding": "4px 10% 3px",
                          "width": "80%",
                        }
                      }
                      value="FFFFFF"
                    />
                    <label
                      htmlFor="rc-editable-input-1"
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "color": "#222",
                          "display": "block",
                          "fontSize": "11px",
                          "paddingBottom": "4px",
                          "paddingTop": "3px",
                          "textAlign": "center",
                          "textTransform": "capitalize",
                        }
                      }
                    >
                      hex
                    </label>
                  </div>
                </EditableInput>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "1",
                    "WebkitBoxFlex": "1",
                    "WebkitFlex": "1",
                    "flex": "1",
                    "msFlex": "1",
                    "paddingLeft": "6px",
                  }
                }
              >
                <EditableInput
                  dragLabel="true"
                  dragMax="255"
                  label="r"
                  onChange={[Function]}
                  style={
                    Object {
                      "input": Object {
                        "MozBoxShadow": "inset 0 0 0 1px #ccc",
                        "OBoxShadow": "inset 0 0 0 1px #ccc",
                        "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                        "border": "none",
                        "boxShadow": "inset 0 0 0 1px #ccc",
                        "fontSize": "11px",
                        "msBoxShadow": "inset 0 0 0 1px #ccc",
                        "padding": "4px 10% 3px",
                        "width": "80%",
                      },
                      "label": Object {
                        "color": "#222",
                        "display": "block",
                        "fontSize": "11px",
                        "paddingBottom": "4px",
                        "paddingTop": "3px",
                        "textAlign": "center",
                        "textTransform": "capitalize",
                      },
                    }
                  }
                  value={255}
                >
                  <div
                    style={
                      Object {
                        "position": "relative",
                      }
                    }
                  >
                    <input
                      id="rc-editable-input-2"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      spellCheck="false"
                      style={
                        Object {
                          "MozBoxShadow": "inset 0 0 0 1px #ccc",
                          "OBoxShadow": "inset 0 0 0 1px #ccc",
                          "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                          "border": "none",
                          "boxShadow": "inset 0 0 0 1px #ccc",
                          "fontSize": "11px",
                          "msBoxShadow": "inset 0 0 0 1px #ccc",
                          "padding": "4px 10% 3px",
                          "width": "80%",
                        }
                      }
                      value="255"
                    />
                    <label
                      htmlFor="rc-editable-input-2"
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "color": "#222",
                          "cursor": "ew-resize",
                          "display": "block",
                          "fontSize": "11px",
                          "paddingBottom": "4px",
                          "paddingTop": "3px",
                          "textAlign": "center",
                          "textTransform": "capitalize",
                        }
                      }
                    >
                      r
                    </label>
                  </div>
                </EditableInput>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "1",
                    "WebkitBoxFlex": "1",
                    "WebkitFlex": "1",
                    "flex": "1",
                    "msFlex": "1",
                    "paddingLeft": "6px",
                  }
                }
              >
                <EditableInput
                  dragLabel="true"
                  dragMax="255"
                  label="g"
                  onChange={[Function]}
                  style={
                    Object {
                      "input": Object {
                        "MozBoxShadow": "inset 0 0 0 1px #ccc",
                        "OBoxShadow": "inset 0 0 0 1px #ccc",
                        "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                        "border": "none",
                        "boxShadow": "inset 0 0 0 1px #ccc",
                        "fontSize": "11px",
                        "msBoxShadow": "inset 0 0 0 1px #ccc",
                        "padding": "4px 10% 3px",
                        "width": "80%",
                      },
                      "label": Object {
                        "color": "#222",
                        "display": "block",
                        "fontSize": "11px",
                        "paddingBottom": "4px",
                        "paddingTop": "3px",
                        "textAlign": "center",
                        "textTransform": "capitalize",
                      },
                    }
                  }
                  value={255}
                >
                  <div
                    style={
                      Object {
                        "position": "relative",
                      }
                    }
                  >
                    <input
                      id="rc-editable-input-3"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      spellCheck="false"
                      style={
                        Object {
                          "MozBoxShadow": "inset 0 0 0 1px #ccc",
                          "OBoxShadow": "inset 0 0 0 1px #ccc",
                          "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                          "border": "none",
                          "boxShadow": "inset 0 0 0 1px #ccc",
                          "fontSize": "11px",
                          "msBoxShadow": "inset 0 0 0 1px #ccc",
                          "padding": "4px 10% 3px",
                          "width": "80%",
                        }
                      }
                      value="255"
                    />
                    <label
                      htmlFor="rc-editable-input-3"
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "color": "#222",
                          "cursor": "ew-resize",
                          "display": "block",
                          "fontSize": "11px",
                          "paddingBottom": "4px",
                          "paddingTop": "3px",
                          "textAlign": "center",
                          "textTransform": "capitalize",
                        }
                      }
                    >
                      g
                    </label>
                  </div>
                </EditableInput>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "1",
                    "WebkitBoxFlex": "1",
                    "WebkitFlex": "1",
                    "flex": "1",
                    "msFlex": "1",
                    "paddingLeft": "6px",
                  }
                }
              >
                <EditableInput
                  dragLabel="true"
                  dragMax="255"
                  label="b"
                  onChange={[Function]}
                  style={
                    Object {
                      "input": Object {
                        "MozBoxShadow": "inset 0 0 0 1px #ccc",
                        "OBoxShadow": "inset 0 0 0 1px #ccc",
                        "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                        "border": "none",
                        "boxShadow": "inset 0 0 0 1px #ccc",
                        "fontSize": "11px",
                        "msBoxShadow": "inset 0 0 0 1px #ccc",
                        "padding": "4px 10% 3px",
                        "width": "80%",
                      },
                      "label": Object {
                        "color": "#222",
                        "display": "block",
                        "fontSize": "11px",
                        "paddingBottom": "4px",
                        "paddingTop": "3px",
                        "textAlign": "center",
                        "textTransform": "capitalize",
                      },
                    }
                  }
                  value={255}
                >
                  <div
                    style={
                      Object {
                        "position": "relative",
                      }
                    }
                  >
                    <input
                      id="rc-editable-input-4"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      spellCheck="false"
                      style={
                        Object {
                          "MozBoxShadow": "inset 0 0 0 1px #ccc",
                          "OBoxShadow": "inset 0 0 0 1px #ccc",
                          "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                          "border": "none",
                          "boxShadow": "inset 0 0 0 1px #ccc",
                          "fontSize": "11px",
                          "msBoxShadow": "inset 0 0 0 1px #ccc",
                          "padding": "4px 10% 3px",
                          "width": "80%",
                        }
                      }
                      value="255"
                    />
                    <label
                      htmlFor="rc-editable-input-4"
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "color": "#222",
                          "cursor": "ew-resize",
                          "display": "block",
                          "fontSize": "11px",
                          "paddingBottom": "4px",
                          "paddingTop": "3px",
                          "textAlign": "center",
                          "textTransform": "capitalize",
                        }
                      }
                    >
                      b
                    </label>
                  </div>
                </EditableInput>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "1",
                    "WebkitBoxFlex": "1",
                    "WebkitFlex": "1",
                    "flex": "1",
                    "msFlex": "1",
                    "paddingLeft": "6px",
                  }
                }
              >
                <EditableInput
                  dragLabel="true"
                  dragMax="100"
                  label="a"
                  onChange={[Function]}
                  style={
                    Object {
                      "input": Object {
                        "MozBoxShadow": "inset 0 0 0 1px #ccc",
                        "OBoxShadow": "inset 0 0 0 1px #ccc",
                        "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                        "border": "none",
                        "boxShadow": "inset 0 0 0 1px #ccc",
                        "fontSize": "11px",
                        "msBoxShadow": "inset 0 0 0 1px #ccc",
                        "padding": "4px 10% 3px",
                        "width": "80%",
                      },
                      "label": Object {
                        "color": "#222",
                        "display": "block",
                        "fontSize": "11px",
                        "paddingBottom": "4px",
                        "paddingTop": "3px",
                        "textAlign": "center",
                        "textTransform": "capitalize",
                      },
                    }
                  }
                  value={100}
                >
                  <div
                    style={
                      Object {
                        "position": "relative",
                      }
                    }
                  >
                    <input
                      id="rc-editable-input-5"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      spellCheck="false"
                      style={
                        Object {
                          "MozBoxShadow": "inset 0 0 0 1px #ccc",
                          "OBoxShadow": "inset 0 0 0 1px #ccc",
                          "WebkitBoxShadow": "inset 0 0 0 1px #ccc",
                          "border": "none",
                          "boxShadow": "inset 0 0 0 1px #ccc",
                          "fontSize": "11px",
                          "msBoxShadow": "inset 0 0 0 1px #ccc",
                          "padding": "4px 10% 3px",
                          "width": "80%",
                        }
                      }
                      value="100"
                    />
                    <label
                      htmlFor="rc-editable-input-5"
                      onMouseDown={[Function]}
                      style={
                        Object {
                          "color": "#222",
                          "cursor": "ew-resize",
                          "display": "block",
                          "fontSize": "11px",
                          "paddingBottom": "4px",
                          "paddingTop": "3px",
                          "textAlign": "center",
                          "textTransform": "capitalize",
                        }
                      }
                    >
                      a
                    </label>
                  </div>
                </EditableInput>
              </div>
            </div>
          </SketchFields>
          <SketchPresetColors
            colors={
              Array [
                "#D0021B",
                "#F5A623",
                "#F8E71C",
                "#8B572A",
                "#7ED321",
                "#417505",
                "#BD10E0",
                "#9013FE",
                "#4A90E2",
                "#50E3C2",
                "#B8E986",
                "#000000",
                "#4A4A4A",
                "#9B9B9B",
                "#FFFFFF",
              ]
            }
            onClick={[Function]}
          >
            <div
              className="flexbox-fix"
              style={
                Object {
                  "borderTop": "1px solid #eee",
                  "display": "flex",
                  "flexWrap": "wrap",
                  "margin": "0 -10px",
                  "padding": "10px 0 0 10px",
                  "position": "relative",
                }
              }
            >
              <div
                key="#D0021B"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#D0021B"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #D0021B",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#D0021B"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #D0021B",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#D0021B",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#D0021B"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#F5A623"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#F5A623"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #F5A623",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#F5A623"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #F5A623",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#F5A623",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#F5A623"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#F8E71C"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#F8E71C"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #F8E71C",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#F8E71C"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #F8E71C",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#F8E71C",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#F8E71C"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#8B572A"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#8B572A"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #8B572A",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#8B572A"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #8B572A",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#8B572A",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#8B572A"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#7ED321"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#7ED321"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #7ED321",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#7ED321"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #7ED321",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#7ED321",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#7ED321"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#417505"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#417505"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #417505",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#417505"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #417505",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#417505",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#417505"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#BD10E0"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#BD10E0"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #BD10E0",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#BD10E0"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #BD10E0",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#BD10E0",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#BD10E0"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#9013FE"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#9013FE"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #9013FE",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#9013FE"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #9013FE",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#9013FE",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#9013FE"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#4A90E2"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#4A90E2"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #4A90E2",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#4A90E2"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #4A90E2",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#4A90E2",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#4A90E2"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#50E3C2"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#50E3C2"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #50E3C2",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#50E3C2"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #50E3C2",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#50E3C2",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#50E3C2"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#B8E986"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#B8E986"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #B8E986",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#B8E986"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #B8E986",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#B8E986",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#B8E986"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#000000"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#000000"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #000000",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#000000"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #000000",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#000000",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#000000"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#4A4A4A"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#4A4A4A"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #4A4A4A",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#4A4A4A"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #4A4A4A",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#4A4A4A",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#4A4A4A"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#9B9B9B"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#9B9B9B"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #9B9B9B",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#9B9B9B"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #9B9B9B",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#9B9B9B",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#9B9B9B"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
              <div
                key="#FFFFFF"
                style={
                  Object {
                    "height": "16px",
                    "margin": "0 10px 10px 0",
                    "width": "16px",
                  }
                }
              >
                <Focus
                  color="#FFFFFF"
                  focusStyle={
                    Object {
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #FFFFFF",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "MozBorderRadius": "3px",
                      "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "OBorderRadius": "3px",
                      "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "WebkitBorderRadius": "3px",
                      "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "borderRadius": "3px",
                      "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                      "msBorderRadius": "3px",
                      "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                    }
                  }
                >
                  <span
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <Swatch
                      color="#FFFFFF"
                      focus={false}
                      focusStyle={
                        Object {
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px #FFFFFF",
                        }
                      }
                      onClick={[Function]}
                      style={
                        Object {
                          "MozBorderRadius": "3px",
                          "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "OBorderRadius": "3px",
                          "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "WebkitBorderRadius": "3px",
                          "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "borderRadius": "3px",
                          "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                          "msBorderRadius": "3px",
                          "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        style={
                          Object {
                            "MozBorderRadius": "3px",
                            "MozBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "OBorderRadius": "3px",
                            "OBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "WebkitBorderRadius": "3px",
                            "WebkitBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "background": "#FFFFFF",
                            "borderRadius": "3px",
                            "boxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "cursor": "pointer",
                            "height": "100%",
                            "msBorderRadius": "3px",
                            "msBoxShadow": "inset 0 0 0 1px rgba(0,0,0,.15)",
                            "outline": "none",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        title="#FFFFFF"
                      />
                    </Swatch>
                  </span>
                </Focus>
              </div>
            </div>
          </SketchPresetColors>
        </div>
      </Sketch>
    </ColorPicker>
    <VerticalBlank>
      <Blank
        type="vertical"
      >
        <div
          style={
            Object {
              "display": "block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
    </VerticalBlank>
    <div>
      <Tag
        color="geekblue"
      >
        <span
          className="ant-tag ant-tag-geekblue"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
        >
          暗黑边栏：
        </span>
      </Tag>
      <Blank>
        <div
          style={
            Object {
              "display": "inline-block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
      <Switch
        checked={true}
        checkedChildren="关闭"
        onChange={[Function]}
        unCheckedChildren="开启"
      >
        <Wave
          insertExtraNode={true}
        >
          <Switch
            checked={true}
            checkedChildren="关闭"
            className=""
            loadingIcon={
              <div
                className="ant-switch-handle"
              />
            }
            onChange={[Function]}
            prefixCls="ant-switch"
            unCheckedChildren="开启"
          >
            <button
              aria-checked={true}
              className="ant-switch ant-switch-checked"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="switch"
              type="button"
            >
              <div
                className="ant-switch-handle"
              />
              <span
                className="ant-switch-inner"
              >
                关闭
              </span>
            </button>
          </Switch>
        </Wave>
      </Switch>
    </div>
    <VerticalBlank>
      <Blank
        type="vertical"
      >
        <div
          style={
            Object {
              "display": "block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
    </VerticalBlank>
    <div>
      <Tag
        color="geekblue"
      >
        <span
          className="ant-tag ant-tag-geekblue"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
        >
          暗黑顶栏：
        </span>
      </Tag>
      <Blank>
        <div
          style={
            Object {
              "display": "inline-block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
      <Switch
        checked={true}
        checkedChildren="关闭"
        onChange={[Function]}
        unCheckedChildren="开启"
      >
        <Wave
          insertExtraNode={true}
        >
          <Switch
            checked={true}
            checkedChildren="关闭"
            className=""
            loadingIcon={
              <div
                className="ant-switch-handle"
              />
            }
            onChange={[Function]}
            prefixCls="ant-switch"
            unCheckedChildren="开启"
          >
            <button
              aria-checked={true}
              className="ant-switch ant-switch-checked"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="switch"
              type="button"
            >
              <div
                className="ant-switch-handle"
              />
              <span
                className="ant-switch-inner"
              >
                关闭
              </span>
            </button>
          </Switch>
        </Wave>
      </Switch>
    </div>
    <VerticalBlank>
      <Blank
        type="vertical"
      >
        <div
          style={
            Object {
              "display": "block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
    </VerticalBlank>
    <div>
      <Tag
        color="geekblue"
      >
        <span
          className="ant-tag ant-tag-geekblue"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
        >
          固定顶栏：
        </span>
      </Tag>
      <Blank>
        <div
          style={
            Object {
              "display": "inline-block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
      <Switch
        checked={false}
        checkedChildren="关闭"
        onChange={[Function]}
        unCheckedChildren="开启"
      >
        <Wave
          insertExtraNode={true}
        >
          <Switch
            checked={false}
            checkedChildren="关闭"
            className=""
            loadingIcon={
              <div
                className="ant-switch-handle"
              />
            }
            onChange={[Function]}
            prefixCls="ant-switch"
            unCheckedChildren="开启"
          >
            <button
              aria-checked={false}
              className="ant-switch"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="switch"
              type="button"
            >
              <div
                className="ant-switch-handle"
              />
              <span
                className="ant-switch-inner"
              >
                开启
              </span>
            </button>
          </Switch>
        </Wave>
      </Switch>
    </div>
    <VerticalBlank>
      <Blank
        type="vertical"
      >
        <div
          style={
            Object {
              "display": "block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
    </VerticalBlank>
    <div>
      <Tag
        color="geekblue"
      >
        <span
          className="ant-tag ant-tag-geekblue"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
        >
          innerMock设置：
        </span>
      </Tag>
      <Blank>
        <div
          style={
            Object {
              "display": "inline-block",
              "height": "16px",
              "width": "28px",
            }
          }
        />
      </Blank>
      <Switch
        checked={false}
        checkedChildren="关闭"
        onChange={[Function]}
        unCheckedChildren="开启"
      >
        <Wave
          insertExtraNode={true}
        >
          <Switch
            checked={false}
            checkedChildren="关闭"
            className=""
            loadingIcon={
              <div
                className="ant-switch-handle"
              />
            }
            onChange={[Function]}
            prefixCls="ant-switch"
            unCheckedChildren="开启"
          >
            <button
              aria-checked={false}
              className="ant-switch"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="switch"
              type="button"
            >
              <div
                className="ant-switch-handle"
              />
              <span
                className="ant-switch-inner"
              >
                开启
              </span>
            </button>
          </Switch>
        </Wave>
      </Switch>
    </div>
  </div>
</SettingPanel>
`;
